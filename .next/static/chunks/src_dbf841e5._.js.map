{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Dialog = DialogPrimitive.Root\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger\r\n\r\nconst DialogPortal = DialogPrimitive.Portal\r\n\r\nconst DialogClose = DialogPrimitive.Close\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n))\r\nDialogContent.displayName = DialogPrimitive.Content.displayName\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogHeader.displayName = \"DialogHeader\"\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogFooter.displayName = \"DialogFooter\"\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogClose,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport {\r\n  Controller,\r\n  FormProvider,\r\n  useFormContext,\r\n  type ControllerProps,\r\n  type FieldPath,\r\n  type FieldValues,\r\n} from \"react-hook-form\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nconst Form = FormProvider\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n> = {\r\n  name: TName\r\n}\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n)\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  )\r\n}\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext)\r\n  const itemContext = React.useContext(FormItemContext)\r\n  const { getFieldState, formState } = useFormContext()\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState)\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\")\r\n  }\r\n\r\n  const { id } = itemContext\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  }\r\n}\r\n\r\ntype FormItemContextValue = {\r\n  id: string\r\n}\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n)\r\n\r\nconst FormItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  const id = React.useId()\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\r\n    </FormItemContext.Provider>\r\n  )\r\n})\r\nFormItem.displayName = \"FormItem\"\r\n\r\nconst FormLabel = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField()\r\n\r\n  return (\r\n    <Label\r\n      ref={ref}\r\n      className={cn(error && \"text-destructive\", className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormLabel.displayName = \"FormLabel\"\r\n\r\nconst FormControl = React.forwardRef<\r\n  React.ElementRef<typeof Slot>,\r\n  React.ComponentPropsWithoutRef<typeof Slot>\r\n>(({ ...props }, ref) => {\r\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\r\n\r\n  return (\r\n    <Slot\r\n      ref={ref}\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormControl.displayName = \"FormControl\"\r\n\r\nconst FormDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => {\r\n  const { formDescriptionId } = useFormField()\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formDescriptionId}\r\n      className={cn(\"text-sm text-muted-foreground\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormDescription.displayName = \"FormDescription\"\r\n\r\nconst FormMessage = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, children, ...props }, ref) => {\r\n  const { error, formMessageId } = useFormField()\r\n  const body = error ? String(error?.message ?? \"\") : children\r\n\r\n  if (!body) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formMessageId}\r\n      className={cn(\"text-sm font-medium text-destructive\", className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  )\r\n})\r\nFormMessage.displayName = \"FormMessage\"\r\n\r\nexport {\r\n  useFormField,\r\n  Form,\r\n  FormItem,\r\n  FormLabel,\r\n  FormControl,\r\n  FormDescription,\r\n  FormMessage,\r\n  FormField,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 656, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 871, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/components/ui/scroll-area.tsx"],"sourcesContent":["\r\n\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root> & {\r\n    viewportRef?: React.Ref<HTMLDivElement>\r\n  }\r\n>(({ className, children, viewportRef, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport\r\n      ref={viewportRef}\r\n      className=\"h-full w-full rounded-[inherit]\"\r\n    >\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }\r\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAKhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,OAAO,EAAE,oBACjD,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAC3B,KAAK;gBACL,WAAU;0BAET;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 949, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Popover = PopoverPrimitive.Root\r\n\r\nconst PopoverTrigger = PopoverPrimitive.Trigger\r\n\r\nconst PopoverContent = React.forwardRef<\r\n  React.ElementRef<typeof PopoverPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\r\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\r\n  <PopoverPrimitive.Portal>\r\n    <PopoverPrimitive.Content\r\n      ref={ref}\r\n      align={align}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </PopoverPrimitive.Portal>\r\n))\r\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent }\r\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 997, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/components/ui/calendar.tsx"],"sourcesContent":["\r\n\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\r\nimport { DayPicker, DropdownProps } from \"react-day-picker\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./select\"\r\nimport { ScrollArea } from \"./scroll-area\"\r\n\r\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\r\n\r\nfunction Calendar({\r\n  className,\r\n  classNames,\r\n  showOutsideDays = true,\r\n  ...props\r\n}: CalendarProps) {\r\n  return (\r\n    <DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn(\"p-3\", className)}\r\n      classNames={{\r\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\r\n        month: \"space-y-4\",\r\n        caption: \"flex justify-center pt-1 relative items-center\",\r\n        caption_label: \"text-sm font-medium\",\r\n        caption_dropdowns: \"flex gap-2\",\r\n        nav: \"space-x-1 flex items-center\",\r\n        nav_button: cn(\r\n          buttonVariants({ variant: \"outline\" }),\r\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\r\n        ),\r\n        nav_button_previous: \"absolute left-1\",\r\n        nav_button_next: \"absolute right-1\",\r\n        table: \"w-full border-collapse space-y-1\",\r\n        head_row: \"flex\",\r\n        head_cell:\r\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\r\n        row: \"flex w-full mt-2\",\r\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\r\n        day: cn(\r\n          buttonVariants({ variant: \"ghost\" }),\r\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\r\n        ),\r\n        day_range_end: \"day-range-end\",\r\n        day_selected:\r\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\r\n        day_today: \"bg-accent text-accent-foreground\",\r\n        day_outside:\r\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\r\n        day_disabled: \"text-muted-foreground opacity-50\",\r\n        day_range_middle:\r\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\r\n        day_hidden: \"invisible\",\r\n        ...classNames,\r\n      }}\r\n      components={{\r\n        IconLeft: ({ className, ...props }) => (\r\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\r\n        ),\r\n        IconRight: ({ className, ...props }) => (\r\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\r\n        ),\r\n        Dropdown: ({ value, onChange, children, ...props }: DropdownProps) => {\r\n          const options = React.Children.toArray(\r\n            children\r\n          ) as React.ReactElement<React.HTMLProps<HTMLOptionElement>>[]\r\n          const selected = options.find((child) => child.props.value === value)\r\n          const handleChange = (value: string) => {\r\n            const changeEvent = {\r\n              target: { value },\r\n            } as React.ChangeEvent<HTMLSelectElement>\r\n            onChange?.(changeEvent)\r\n          }\r\n          return (\r\n            <Select\r\n              value={value?.toString()}\r\n              onValueChange={(value) => {\r\n                handleChange(value)\r\n              }}\r\n            >\r\n              <SelectTrigger className=\"pr-1.5 focus:ring-0\">\r\n                <SelectValue>{selected?.props?.children}</SelectValue>\r\n              </SelectTrigger>\r\n              <SelectContent position=\"popper\">\r\n                <ScrollArea className=\"h-80\">\r\n                  {options.map((option, id: number) => (\r\n                    <SelectItem\r\n                      key={`${option.props.value}-${id}`}\r\n                      value={option.props.value?.toString() ?? \"\"}\r\n                    >\r\n                      {option.props.children}\r\n                    </SelectItem>\r\n                  ))}\r\n                </ScrollArea>\r\n              </SelectContent>\r\n            </Select>\r\n          )\r\n        },\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nCalendar.displayName = \"Calendar\"\r\n\r\nexport { Calendar }\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AATA;;;;;;;;;AAaA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,mBAAmB;YACnB,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE9D,UAAU,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,OAAsB;gBAC/D,MAAM,UAAU,6JAAA,CAAA,WAAc,CAAC,OAAO,CACpC;gBAEF,MAAM,WAAW,QAAQ,IAAI,CAAC,CAAC,QAAU,MAAM,KAAK,CAAC,KAAK,KAAK;gBAC/D,MAAM,eAAe,CAAC;oBACpB,MAAM,cAAc;wBAClB,QAAQ;4BAAE;wBAAM;oBAClB;oBACA,WAAW;gBACb;gBACA,qBACE,6LAAC,qIAAA,CAAA,SAAM;oBACL,OAAO,OAAO;oBACd,eAAe,CAAC;wBACd,aAAa;oBACf;;sCAEA,6LAAC,qIAAA,CAAA,gBAAa;4BAAC,WAAU;sCACvB,cAAA,6LAAC,qIAAA,CAAA,cAAW;0CAAE,UAAU,OAAO;;;;;;;;;;;sCAEjC,6LAAC,qIAAA,CAAA,gBAAa;4BAAC,UAAS;sCACtB,cAAA,6LAAC,6IAAA,CAAA,aAAU;gCAAC,WAAU;0CACnB,QAAQ,GAAG,CAAC,CAAC,QAAQ,mBACpB,6LAAC,qIAAA,CAAA,aAAU;wCAET,OAAO,OAAO,KAAK,CAAC,KAAK,EAAE,cAAc;kDAExC,OAAO,KAAK,CAAC,QAAQ;uCAHjB,GAAG,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI;;;;;;;;;;;;;;;;;;;;;YAUhD;QACF;QACC,GAAG,KAAK;;;;;;AAGf;KA5FS;AA6FT,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1150, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/components/ui/textarea.tsx"],"sourcesContent":["\r\nimport * as React from 'react';\r\n\r\nimport {cn} from '@/lib/utils';\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\r\n  ({className, ...props}, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nTextarea.displayName = 'Textarea';\r\n\r\nexport {Textarea};\r\n\r\n    "],"names":[],"mappings":";;;;AACA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1185, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/components/create-patient-dialog.tsx"],"sourcesContent":["\r\n\"use client\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { z } from \"zod\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter, DialogDescription } from \"@/components/ui/dialog\";\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Patient, users } from \"@/lib/constants\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./ui/select\";\r\nimport { Camera, Upload, User as UserIcon, X, Fingerprint, CheckCircle, CalendarIcon, ArrowRight, ArrowLeft } from \"lucide-react\";\r\nimport Image from \"next/image\";\r\nimport { ScrollArea } from \"./ui/scroll-area\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Popover, PopoverTrigger, PopoverContent } from \"./ui/popover\";\r\nimport { Calendar } from \"./ui/calendar\";\r\nimport { format } from \"date-fns\";\r\nimport { Textarea } from \"./ui/textarea\";\r\n\r\nconst formSchema = z.object({\r\n  name: z.string().min(2, \"Name must be at least 2 characters.\"),\r\n  gender: z.enum(['Male', 'Female']),\r\n  dateOfBirth: z.date({ required_error: \"Date of birth is required.\" }),\r\n  maritalStatus: z.enum(['Single', 'Married', 'Divorced', 'Widowed']),\r\n  address: z.string().min(10, \"Address must be at least 10 characters.\"),\r\n  condition: z.enum(['Stable', 'Critical', 'Improving']),\r\n  assignedDoctor: z.string().min(1, \"Please assign a doctor.\"),\r\n  avatarUrl: z.string().optional(),\r\n  fingerprintId: z.string().optional(),\r\n});\r\n\r\ntype FormData = z.infer<typeof formSchema>;\r\ntype PatientSaveData = Omit<Patient, 'id' | 'medicalHistory' | 'prescriptions' | 'lastVisit' | 'labTests' | 'bloodType' | 'admission'>;\r\n\r\ninterface CreatePatientDialogProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onPatientSaved: (patient: PatientSaveData) => void;\r\n}\r\n\r\nconst doctors = users.filter(u => u.role === 'doctor');\r\nconst step1Fields: (keyof FormData)[] = ['name', 'gender', 'dateOfBirth', 'maritalStatus', 'address', 'condition', 'assignedDoctor'];\r\n\r\nexport function CreatePatientDialog({ isOpen, onClose, onPatientSaved }: CreatePatientDialogProps) {\r\n    const [step, setStep] = useState(1);\r\n    const [photoPreview, setPhotoPreview] = useState<string | null>(null);\r\n    const [fingerprintCaptured, setFingerprintCaptured] = useState(false);\r\n    const [isCameraOpen, setCameraOpen] = useState(false);\r\n    const videoRef = useRef<HTMLVideoElement>(null);\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n    const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const form = useForm<FormData>({\r\n        resolver: zodResolver(formSchema),\r\n        defaultValues: {\r\n            name: \"\",\r\n            gender: \"Male\",\r\n            maritalStatus: \"Single\",\r\n            address: \"\",\r\n            condition: \"Stable\",\r\n            assignedDoctor: \"\",\r\n            avatarUrl: \"\",\r\n            fingerprintId: \"\",\r\n        },\r\n    });\r\n    \r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            setStep(1); // Reset to first step when dialog opens\r\n            form.reset({\r\n                name: \"\",\r\n                gender: \"Male\",\r\n                maritalStatus: \"Single\",\r\n                address: \"\",\r\n                condition: \"Stable\",\r\n                assignedDoctor: doctors.length > 0 ? doctors[0].name : \"\",\r\n                avatarUrl: \"\",\r\n                fingerprintId: \"\",\r\n            });\r\n            setPhotoPreview(null);\r\n            setFingerprintCaptured(false);\r\n            if (fileInputRef.current) fileInputRef.current.value = \"\";\r\n        }\r\n    }, [isOpen, form]);\r\n\r\n    useEffect(() => {\r\n        const startVideoStream = async () => {\r\n            if (isCameraOpen && navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n                try {\r\n                    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n                    if (videoRef.current) {\r\n                        videoRef.current.srcObject = stream;\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error accessing camera:\", error);\r\n                    setCameraOpen(false);\r\n                }\r\n            }\r\n        };\r\n\r\n        const stopVideoStream = () => {\r\n            if (videoRef.current && videoRef.current.srcObject) {\r\n                const stream = videoRef.current.srcObject as MediaStream;\r\n                stream.getTracks().forEach(track => track.stop());\r\n                videoRef.current.srcObject = null;\r\n            }\r\n        };\r\n\r\n        if (isCameraOpen) {\r\n            startVideoStream();\r\n        } else {\r\n            stopVideoStream();\r\n        }\r\n\r\n        return () => stopVideoStream();\r\n    }, [isCameraOpen]);\r\n    \r\n\r\n    const handleCapture = () => {\r\n        if (videoRef.current && canvasRef.current) {\r\n            const video = videoRef.current;\r\n            const canvas = canvasRef.current;\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            const context = canvas.getContext('2d');\r\n            context?.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\r\n            const dataUrl = canvas.toDataURL('image/png');\r\n            setPhotoPreview(dataUrl);\r\n            form.setValue('avatarUrl', dataUrl);\r\n            setCameraOpen(false);\r\n        }\r\n    }\r\n    \r\n    const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const file = event.target.files?.[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                const dataUrl = reader.result as string;\r\n                setPhotoPreview(dataUrl);\r\n                form.setValue('avatarUrl', dataUrl);\r\n            }\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    const handleFingerprintCapture = () => {\r\n        // Simulate fingerprint capture\r\n        setFingerprintCaptured(true);\r\n        form.setValue('fingerprintId', `FP_${Date.now()}`);\r\n    }\r\n    \r\n    const triggerFileUpload = () => {\r\n        fileInputRef.current?.click();\r\n    };\r\n\r\n    const clearPhoto = () => {\r\n        setPhotoPreview(null);\r\n        form.setValue('avatarUrl', undefined);\r\n        if (fileInputRef.current) {\r\n            fileInputRef.current.value = \"\";\r\n        }\r\n    }\r\n\r\n    const clearFingerprint = () => {\r\n        setFingerprintCaptured(false);\r\n        form.setValue('fingerprintId', undefined);\r\n    }\r\n\r\n    const handleNext = async () => {\r\n        const isValid = await form.trigger(step1Fields);\r\n        if (isValid) {\r\n            setStep(2);\r\n        }\r\n    }\r\n\r\n    function onSubmit(values: FormData) {\r\n        onPatientSaved({ ...values, dateOfBirth: format(values.dateOfBirth, \"yyyy-MM-dd\")});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={isOpen} onOpenChange={onClose}>\r\n                <DialogContent className=\"max-w-xl flex flex-col p-0\">\r\n                    <DialogHeader className=\"p-6 pb-4 border-b\">\r\n                        <DialogTitle>Create New Patient Record</DialogTitle>\r\n                        <DialogDescription>\r\n                           Step {step} of 2: {step === 1 ? 'Enter Patient Details' : 'Capture Biometrics'}\r\n                        </DialogDescription>\r\n                    </DialogHeader>\r\n                    <Form {...form}>\r\n                        <form onSubmit={form.handleSubmit(onSubmit)} className=\"flex-1 overflow-hidden flex flex-col\">\r\n                             <ScrollArea className=\"flex-1\">\r\n                                <div className=\"p-6\">\r\n                                    {step === 1 && (\r\n                                         <div className=\"space-y-6\">\r\n                                            <FormField\r\n                                                control={form.control}\r\n                                                name=\"name\"\r\n                                                render={({ field }) => (\r\n                                                    <FormItem>\r\n                                                        <FormLabel>Full Name</FormLabel>\r\n                                                        <FormControl><Input placeholder=\"Jane Smith\" {...field} /></FormControl>\r\n                                                        <FormMessage />\r\n                                                    </FormItem>\r\n                                                )}\r\n                                            />\r\n                                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                                <FormField\r\n                                                    control={form.control}\r\n                                                    name=\"gender\"\r\n                                                    render={({ field }) => (\r\n                                                        <FormItem>\r\n                                                            <FormLabel>Gender</FormLabel>\r\n                                                            <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                                                                <FormControl><SelectTrigger><SelectValue placeholder=\"Select gender\" /></SelectTrigger></FormControl>\r\n                                                                <SelectContent>\r\n                                                                    <SelectItem value=\"Male\">Male</SelectItem>\r\n                                                                    <SelectItem value=\"Female\">Female</SelectItem>\r\n                                                                </SelectContent>\r\n                                                            </Select>\r\n                                                            <FormMessage />\r\n                                                        </FormItem>\r\n                                                    )}\r\n                                                />\r\n                                                <FormField\r\n                                                    control={form.control}\r\n                                                    name=\"dateOfBirth\"\r\n                                                    render={({ field }) => (\r\n                                                        <FormItem className=\"flex flex-col\">\r\n                                                        <FormLabel>Date of Birth</FormLabel>\r\n                                                        <Popover>\r\n                                                            <PopoverTrigger asChild>\r\n                                                            <FormControl>\r\n                                                                <Button\r\n                                                                variant={\"outline\"}\r\n                                                                className={cn(\r\n                                                                    \"w-full justify-start text-left font-normal\",\r\n                                                                    !field.value && \"text-muted-foreground\"\r\n                                                                )}\r\n                                                                >\r\n                                                                <CalendarIcon className=\"mr-2 h-4 w-4\" />\r\n                                                                {field.value ? (\r\n                                                                    format(field.value, \"PPP\")\r\n                                                                ) : (\r\n                                                                    <span>Pick a date</span>\r\n                                                                )}\r\n                                                                </Button>\r\n                                                            </FormControl>\r\n                                                            </PopoverTrigger>\r\n                                                            <PopoverContent className=\"w-auto p-0\" align=\"start\">\r\n                                                            <Calendar\r\n                                                                mode=\"single\"\r\n                                                                captionLayout=\"dropdown-buttons\"\r\n                                                                fromYear={1920}\r\n                                                                toYear={new Date().getFullYear()}\r\n                                                                selected={field.value}\r\n                                                                onSelect={field.onChange}\r\n                                                                disabled={(date) => date > new Date() || date < new Date(\"1900-01-01\")}\r\n                                                                initialFocus\r\n                                                            />\r\n                                                            </PopoverContent>\r\n                                                        </Popover>\r\n                                                        <FormMessage />\r\n                                                        </FormItem>\r\n                                                    )}\r\n                                                    />\r\n                                                <FormField\r\n                                                    control={form.control}\r\n                                                    name=\"maritalStatus\"\r\n                                                    render={({ field }) => (\r\n                                                        <FormItem>\r\n                                                            <FormLabel>Marital Status</FormLabel>\r\n                                                            <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                                                                <FormControl><SelectTrigger><SelectValue placeholder=\"Select status\" /></SelectTrigger></FormControl>\r\n                                                                <SelectContent>\r\n                                                                    <SelectItem value=\"Single\">Single</SelectItem>\r\n                                                                    <SelectItem value=\"Married\">Married</SelectItem>\r\n                                                                    <SelectItem value=\"Divorced\">Divorced</SelectItem>\r\n                                                                    <SelectItem value=\"Widowed\">Widowed</SelectItem>\r\n                                                                </SelectContent>\r\n                                                            </Select>\r\n                                                            <FormMessage />\r\n                                                        </FormItem>\r\n                                                    )}\r\n                                                />\r\n                                                <FormField\r\n                                                    control={form.control}\r\n                                                    name=\"assignedDoctor\"\r\n                                                    render={({ field }) => (\r\n                                                        <FormItem>\r\n                                                            <FormLabel>Assign Doctor</FormLabel>\r\n                                                            <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                                                                <FormControl><SelectTrigger><SelectValue placeholder=\"Select a doctor\" /></SelectTrigger></FormControl>\r\n                                                                <SelectContent>\r\n                                                                    {doctors.map((doctor) => (<SelectItem key={doctor.email} value={doctor.name}>{doctor.name}</SelectItem>))}\r\n                                                                </SelectContent>\r\n                                                            </Select>\r\n                                                            <FormMessage />\r\n                                                        </FormItem>\r\n                                                    )}\r\n                                                />\r\n                                            </div>\r\n                                             <div className=\"space-y-6\">\r\n                                                <FormField\r\n                                                        control={form.control}\r\n                                                        name=\"address\"\r\n                                                        render={({ field }) => (\r\n                                                            <FormItem>\r\n                                                                <FormLabel>Address</FormLabel>\r\n                                                                <FormControl>\r\n                                                                    <Textarea placeholder=\"123 Main St, Anytown...\" {...field} />\r\n                                                                </FormControl>\r\n                                                                <FormMessage />\r\n                                                            </FormItem>\r\n                                                        )}\r\n                                                    />\r\n                                                <FormField\r\n                                                    control={form.control}\r\n                                                    name=\"condition\"\r\n                                                    render={({ field }) => (\r\n                                                        <FormItem>\r\n                                                            <FormLabel>Initial Condition</FormLabel>\r\n                                                             <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                                                                <FormControl><SelectTrigger><SelectValue placeholder=\"Select initial condition\" /></SelectTrigger></FormControl>\r\n                                                                <SelectContent>\r\n                                                                    <SelectItem value=\"Stable\">Stable</SelectItem>\r\n                                                                    <SelectItem value=\"Improving\">Improving</SelectItem>\r\n                                                                    <SelectItem value=\"Critical\">Critical</SelectItem>\r\n                                                                </SelectContent>\r\n                                                            </Select>\r\n                                                            <FormMessage />\r\n                                                        </FormItem>\r\n                                                    )}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                    {step === 2 && (\r\n                                         <div className=\"space-y-6\">\r\n                                            <div className=\"space-y-3 flex flex-col\">\r\n                                                <FormLabel>Patient Biometrics</FormLabel>\r\n                                                <div className=\"grid grid-cols-2 gap-4\">\r\n                                                    <div className=\"aspect-square w-full rounded-md border bg-muted flex items-center justify-center overflow-hidden relative group/photo\">\r\n                                                        {photoPreview ? (\r\n                                                            <>\r\n                                                                <Image src={photoPreview} alt=\"Patient preview\" layout=\"fill\" objectFit=\"cover\" />\r\n                                                                <div className=\"absolute inset-0 bg-black/40 flex items-center justify-center opacity-0 group-hover/photo:opacity-100 transition-opacity\">\r\n                                                                    <Button type=\"button\" size=\"icon\" variant=\"destructive\" onClick={clearPhoto}>\r\n                                                                        <X className=\"h-5 w-5\" />\r\n                                                                        <span className=\"sr-only\">Clear Photo</span>\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            </>\r\n                                                        ) : (\r\n                                                            <div className=\"text-center text-muted-foreground p-2\">\r\n                                                                <UserIcon className=\"mx-auto h-10 w-10\" />\r\n                                                                <p className=\"text-xs mt-1\">Patient Photo</p>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                    <div className={cn(\"aspect-square w-full rounded-md border bg-muted flex items-center justify-center overflow-hidden relative group/fingerprint transition-colors\", fingerprintCaptured && \"border-green-500 bg-green-500/10\")}>\r\n                                                        {fingerprintCaptured ? (\r\n                                                            <>\r\n                                                                <div className=\"text-center text-green-600 p-2\">\r\n                                                                    <CheckCircle className=\"mx-auto h-10 w-10\" />\r\n                                                                    <p className=\"text-xs mt-1 font-semibold\">Captured</p>\r\n                                                                </div>\r\n                                                                <div className=\"absolute inset-0 bg-black/40 flex items-center justify-center opacity-0 group-hover/fingerprint:opacity-100 transition-opacity\">\r\n                                                                    <Button type=\"button\" size=\"icon\" variant=\"destructive\" onClick={clearFingerprint}>\r\n                                                                        <X className=\"h-5 w-5\" />\r\n                                                                        <span className=\"sr-only\">Clear Fingerprint</span>\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            </>\r\n                                                        ) : (\r\n                                                            <div className=\"text-center text-muted-foreground p-2\">\r\n                                                                <Fingerprint className=\"mx-auto h-10 w-10\" />\r\n                                                                <p className=\"text-xs mt-1\">Fingerprint</p>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"flex gap-2\">\r\n                                                    <Button type=\"button\" variant=\"outline\" className=\"w-full\" onClick={() => setCameraOpen(true)}>\r\n                                                        <Camera className=\"mr-2 h-4 w-4\"/>Take Photo\r\n                                                    </Button>\r\n                                                    <Button type=\"button\" variant=\"outline\" className=\"w-full\" onClick={triggerFileUpload}>\r\n                                                        <Upload className=\"mr-2 h-4 w-4\"/>Upload\r\n                                                    </Button>\r\n                                                    <Button type=\"button\" variant=\"outline\" className=\"w-full\" onClick={handleFingerprintCapture} disabled={fingerprintCaptured}>\r\n                                                        <Fingerprint className=\"mr-2 h-4 w-4\"/>Scan Print\r\n                                                    </Button>\r\n                                                    <input type=\"file\" ref={fileInputRef} onChange={handleFileChange} className=\"hidden\" accept=\"image/png, image/jpeg, image/gif\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </ScrollArea>\r\n                            <DialogFooter className=\"p-6 pt-4 border-t bg-background flex justify-between\">\r\n                                <Button type=\"button\" variant=\"ghost\" onClick={onClose}>Cancel</Button>\r\n                                <div className=\"flex gap-2\">\r\n                                    {step === 2 && (\r\n                                         <Button type=\"button\" variant=\"outline\" onClick={() => setStep(1)}>\r\n                                            <ArrowLeft className=\"mr-2 h-4 w-4\" />\r\n                                            Back\r\n                                        </Button>\r\n                                    )}\r\n                                    {step === 1 ? (\r\n                                        <Button type=\"button\" onClick={handleNext}>\r\n                                            Next <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n                                        </Button>\r\n                                    ) : (\r\n                                        <Button type=\"submit\">Create Patient</Button>\r\n                                    )}\r\n                                </div>\r\n                            </DialogFooter>\r\n                        </form>\r\n                    </Form>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            {/* Camera Modal */}\r\n            <Dialog open={isCameraOpen} onOpenChange={setCameraOpen}>\r\n                <DialogContent>\r\n                    <DialogHeader>\r\n                        <DialogTitle>Take Patient Photo</DialogTitle>\r\n                    </DialogHeader>\r\n                    <div className=\"aspect-video w-full rounded-md bg-muted flex items-center justify-center overflow-hidden mt-2 border\">\r\n                        <video ref={videoRef} className=\"w-full h-full object-cover\" autoPlay muted playsInline />\r\n                    </div>\r\n                    <canvas ref={canvasRef} className=\"hidden\" />\r\n                    <DialogFooter>\r\n                        <Button type=\"button\" variant=\"ghost\" onClick={() => setCameraOpen(false)}>Cancel</Button>\r\n                        <Button type=\"button\" onClick={handleCapture}>\r\n                            <Camera className=\"mr-2 h-4 w-4\" /> Capture and Save\r\n                        </Button>\r\n                    </DialogFooter>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAnBA;;;;;;;;;;;;;;;;;;;AAqBA,MAAM,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1B,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,QAAQ,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAS;IACjC,aAAa,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAE,gBAAgB;IAA6B;IACnE,eAAe,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAU;QAAW;QAAY;KAAU;IAClE,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI;IAC5B,WAAW,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAU;QAAY;KAAY;IACrD,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAClC,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AACpC;AAWA,MAAM,UAAU,0HAAA,CAAA,QAAK,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK;AAC7C,MAAM,cAAkC;IAAC;IAAQ;IAAU;IAAe;IAAiB;IAAW;IAAa;CAAiB;AAE7H,SAAS,oBAAoB,EAAE,MAAM,EAAE,OAAO,EAAE,cAAc,EAA4B;;IAC7F,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAChE,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/D,MAAM,CAAC,cAAc,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoB;IAC1C,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAqB;IAC5C,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoB;IAE9C,MAAM,OAAO,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAY;QAC3B,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACX,MAAM;YACN,QAAQ;YACR,eAAe;YACf,SAAS;YACT,WAAW;YACX,gBAAgB;YAChB,WAAW;YACX,eAAe;QACnB;IACJ;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACN,IAAI,QAAQ;gBACR,QAAQ,IAAI,wCAAwC;gBACpD,KAAK,KAAK,CAAC;oBACP,MAAM;oBACN,QAAQ;oBACR,eAAe;oBACf,SAAS;oBACT,WAAW;oBACX,gBAAgB,QAAQ,MAAM,GAAG,IAAI,OAAO,CAAC,EAAE,CAAC,IAAI,GAAG;oBACvD,WAAW;oBACX,eAAe;gBACnB;gBACA,gBAAgB;gBAChB,uBAAuB;gBACvB,IAAI,aAAa,OAAO,EAAE,aAAa,OAAO,CAAC,KAAK,GAAG;YAC3D;QACJ;wCAAG;QAAC;QAAQ;KAAK;IAEjB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACN,MAAM;kEAAmB;oBACrB,IAAI,gBAAgB,UAAU,YAAY,IAAI,UAAU,YAAY,CAAC,YAAY,EAAE;wBAC/E,IAAI;4BACA,MAAM,SAAS,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;gCAAE,OAAO;4BAAK;4BACvE,IAAI,SAAS,OAAO,EAAE;gCAClB,SAAS,OAAO,CAAC,SAAS,GAAG;4BACjC;wBACJ,EAAE,OAAO,OAAO;4BACZ,QAAQ,KAAK,CAAC,2BAA2B;4BACzC,cAAc;wBAClB;oBACJ;gBACJ;;YAEA,MAAM;iEAAkB;oBACpB,IAAI,SAAS,OAAO,IAAI,SAAS,OAAO,CAAC,SAAS,EAAE;wBAChD,MAAM,SAAS,SAAS,OAAO,CAAC,SAAS;wBACzC,OAAO,SAAS,GAAG,OAAO;6EAAC,CAAA,QAAS,MAAM,IAAI;;wBAC9C,SAAS,OAAO,CAAC,SAAS,GAAG;oBACjC;gBACJ;;YAEA,IAAI,cAAc;gBACd;YACJ,OAAO;gBACH;YACJ;YAEA;iDAAO,IAAM;;QACjB;wCAAG;QAAC;KAAa;IAGjB,MAAM,gBAAgB;QAClB,IAAI,SAAS,OAAO,IAAI,UAAU,OAAO,EAAE;YACvC,MAAM,QAAQ,SAAS,OAAO;YAC9B,MAAM,SAAS,UAAU,OAAO;YAChC,OAAO,KAAK,GAAG,MAAM,UAAU;YAC/B,OAAO,MAAM,GAAG,MAAM,WAAW;YACjC,MAAM,UAAU,OAAO,UAAU,CAAC;YAClC,SAAS,UAAU,OAAO,GAAG,GAAG,MAAM,UAAU,EAAE,MAAM,WAAW;YACnE,MAAM,UAAU,OAAO,SAAS,CAAC;YACjC,gBAAgB;YAChB,KAAK,QAAQ,CAAC,aAAa;YAC3B,cAAc;QAClB;IACJ;IAEA,MAAM,mBAAmB,CAAC;QACtB,MAAM,OAAO,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QACpC,IAAI,MAAM;YACN,MAAM,SAAS,IAAI;YACnB,OAAO,SAAS,GAAG;gBACf,MAAM,UAAU,OAAO,MAAM;gBAC7B,gBAAgB;gBAChB,KAAK,QAAQ,CAAC,aAAa;YAC/B;YACA,OAAO,aAAa,CAAC;QACzB;IACJ;IAEA,MAAM,2BAA2B;QAC7B,+BAA+B;QAC/B,uBAAuB;QACvB,KAAK,QAAQ,CAAC,iBAAiB,CAAC,GAAG,EAAE,KAAK,GAAG,IAAI;IACrD;IAEA,MAAM,oBAAoB;QACtB,aAAa,OAAO,EAAE;IAC1B;IAEA,MAAM,aAAa;QACf,gBAAgB;QAChB,KAAK,QAAQ,CAAC,aAAa;QAC3B,IAAI,aAAa,OAAO,EAAE;YACtB,aAAa,OAAO,CAAC,KAAK,GAAG;QACjC;IACJ;IAEA,MAAM,mBAAmB;QACrB,uBAAuB;QACvB,KAAK,QAAQ,CAAC,iBAAiB;IACnC;IAEA,MAAM,aAAa;QACf,MAAM,UAAU,MAAM,KAAK,OAAO,CAAC;QACnC,IAAI,SAAS;YACT,QAAQ;QACZ;IACJ;IAEA,SAAS,SAAS,MAAgB;QAC9B,eAAe;YAAE,GAAG,MAAM;YAAE,aAAa,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,OAAO,WAAW,EAAE;QAAa;IACrF;IAEA,qBACI;;0BACI,6LAAC,qIAAA,CAAA,SAAM;gBAAC,MAAM;gBAAQ,cAAc;0BAChC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;oBAAC,WAAU;;sCACrB,6LAAC,qIAAA,CAAA,eAAY;4BAAC,WAAU;;8CACpB,6LAAC,qIAAA,CAAA,cAAW;8CAAC;;;;;;8CACb,6LAAC,qIAAA,CAAA,oBAAiB;;wCAAC;wCACV;wCAAK;wCAAQ,SAAS,IAAI,0BAA0B;;;;;;;;;;;;;sCAGjE,6LAAC,mIAAA,CAAA,OAAI;4BAAE,GAAG,IAAI;sCACV,cAAA,6LAAC;gCAAK,UAAU,KAAK,YAAY,CAAC;gCAAW,WAAU;;kDAClD,6LAAC,6IAAA,CAAA,aAAU;wCAAC,WAAU;kDACnB,cAAA,6LAAC;4CAAI,WAAU;;gDACV,SAAS,mBACL,6LAAC;oDAAI,WAAU;;sEACZ,6LAAC,mIAAA,CAAA,YAAS;4DACN,SAAS,KAAK,OAAO;4DACrB,MAAK;4DACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,6LAAC,mIAAA,CAAA,WAAQ;;sFACL,6LAAC,mIAAA,CAAA,YAAS;sFAAC;;;;;;sFACX,6LAAC,mIAAA,CAAA,cAAW;sFAAC,cAAA,6LAAC,oIAAA,CAAA,QAAK;gFAAC,aAAY;gFAAc,GAAG,KAAK;;;;;;;;;;;sFACtD,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sEAIxB,6LAAC;4DAAI,WAAU;;8EACX,6LAAC,mIAAA,CAAA,YAAS;oEACN,SAAS,KAAK,OAAO;oEACrB,MAAK;oEACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,6LAAC,mIAAA,CAAA,WAAQ;;8FACL,6LAAC,mIAAA,CAAA,YAAS;8FAAC;;;;;;8FACX,6LAAC,qIAAA,CAAA,SAAM;oFAAC,eAAe,MAAM,QAAQ;oFAAE,cAAc,MAAM,KAAK;;sGAC5D,6LAAC,mIAAA,CAAA,cAAW;sGAAC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;0GAAC,cAAA,6LAAC,qIAAA,CAAA,cAAW;oGAAC,aAAY;;;;;;;;;;;;;;;;sGACrD,6LAAC,qIAAA,CAAA,gBAAa;;8GACV,6LAAC,qIAAA,CAAA,aAAU;oGAAC,OAAM;8GAAO;;;;;;8GACzB,6LAAC,qIAAA,CAAA,aAAU;oGAAC,OAAM;8GAAS;;;;;;;;;;;;;;;;;;8FAGnC,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8EAIxB,6LAAC,mIAAA,CAAA,YAAS;oEACN,SAAS,KAAK,OAAO;oEACrB,MAAK;oEACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,6LAAC,mIAAA,CAAA,WAAQ;4EAAC,WAAU;;8FACpB,6LAAC,mIAAA,CAAA,YAAS;8FAAC;;;;;;8FACX,6LAAC,sIAAA,CAAA,UAAO;;sGACJ,6LAAC,sIAAA,CAAA,iBAAc;4FAAC,OAAO;sGACvB,cAAA,6LAAC,mIAAA,CAAA,cAAW;0GACR,cAAA,6LAAC,qIAAA,CAAA,SAAM;oGACP,SAAS;oGACT,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,8CACA,CAAC,MAAM,KAAK,IAAI;;sHAGpB,6LAAC,iNAAA,CAAA,eAAY;4GAAC,WAAU;;;;;;wGACvB,MAAM,KAAK,GACR,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,MAAM,KAAK,EAAE,uBAEpB,6LAAC;sHAAK;;;;;;;;;;;;;;;;;;;;;;sGAKd,6LAAC,sIAAA,CAAA,iBAAc;4FAAC,WAAU;4FAAa,OAAM;sGAC7C,cAAA,6LAAC,uIAAA,CAAA,WAAQ;gGACL,MAAK;gGACL,eAAc;gGACd,UAAU;gGACV,QAAQ,IAAI,OAAO,WAAW;gGAC9B,UAAU,MAAM,KAAK;gGACrB,UAAU,MAAM,QAAQ;gGACxB,UAAU,CAAC,OAAS,OAAO,IAAI,UAAU,OAAO,IAAI,KAAK;gGACzD,YAAY;;;;;;;;;;;;;;;;;8FAIpB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8EAIpB,6LAAC,mIAAA,CAAA,YAAS;oEACN,SAAS,KAAK,OAAO;oEACrB,MAAK;oEACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,6LAAC,mIAAA,CAAA,WAAQ;;8FACL,6LAAC,mIAAA,CAAA,YAAS;8FAAC;;;;;;8FACX,6LAAC,qIAAA,CAAA,SAAM;oFAAC,eAAe,MAAM,QAAQ;oFAAE,cAAc,MAAM,KAAK;;sGAC5D,6LAAC,mIAAA,CAAA,cAAW;sGAAC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;0GAAC,cAAA,6LAAC,qIAAA,CAAA,cAAW;oGAAC,aAAY;;;;;;;;;;;;;;;;sGACrD,6LAAC,qIAAA,CAAA,gBAAa;;8GACV,6LAAC,qIAAA,CAAA,aAAU;oGAAC,OAAM;8GAAS;;;;;;8GAC3B,6LAAC,qIAAA,CAAA,aAAU;oGAAC,OAAM;8GAAU;;;;;;8GAC5B,6LAAC,qIAAA,CAAA,aAAU;oGAAC,OAAM;8GAAW;;;;;;8GAC7B,6LAAC,qIAAA,CAAA,aAAU;oGAAC,OAAM;8GAAU;;;;;;;;;;;;;;;;;;8FAGpC,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8EAIxB,6LAAC,mIAAA,CAAA,YAAS;oEACN,SAAS,KAAK,OAAO;oEACrB,MAAK;oEACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,6LAAC,mIAAA,CAAA,WAAQ;;8FACL,6LAAC,mIAAA,CAAA,YAAS;8FAAC;;;;;;8FACX,6LAAC,qIAAA,CAAA,SAAM;oFAAC,eAAe,MAAM,QAAQ;oFAAE,cAAc,MAAM,KAAK;;sGAC5D,6LAAC,mIAAA,CAAA,cAAW;sGAAC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;0GAAC,cAAA,6LAAC,qIAAA,CAAA,cAAW;oGAAC,aAAY;;;;;;;;;;;;;;;;sGACrD,6LAAC,qIAAA,CAAA,gBAAa;sGACT,QAAQ,GAAG,CAAC,CAAC,uBAAY,6LAAC,qIAAA,CAAA,aAAU;oGAAoB,OAAO,OAAO,IAAI;8GAAG,OAAO,IAAI;mGAA9C,OAAO,KAAK;;;;;;;;;;;;;;;;8FAG/D,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;sEAK3B,6LAAC;4DAAI,WAAU;;8EACZ,6LAAC,mIAAA,CAAA,YAAS;oEACF,SAAS,KAAK,OAAO;oEACrB,MAAK;oEACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,6LAAC,mIAAA,CAAA,WAAQ;;8FACL,6LAAC,mIAAA,CAAA,YAAS;8FAAC;;;;;;8FACX,6LAAC,mIAAA,CAAA,cAAW;8FACR,cAAA,6LAAC,uIAAA,CAAA,WAAQ;wFAAC,aAAY;wFAA2B,GAAG,KAAK;;;;;;;;;;;8FAE7D,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8EAI5B,6LAAC,mIAAA,CAAA,YAAS;oEACN,SAAS,KAAK,OAAO;oEACrB,MAAK;oEACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,6LAAC,mIAAA,CAAA,WAAQ;;8FACL,6LAAC,mIAAA,CAAA,YAAS;8FAAC;;;;;;8FACV,6LAAC,qIAAA,CAAA,SAAM;oFAAC,eAAe,MAAM,QAAQ;oFAAE,cAAc,MAAM,KAAK;;sGAC7D,6LAAC,mIAAA,CAAA,cAAW;sGAAC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;0GAAC,cAAA,6LAAC,qIAAA,CAAA,cAAW;oGAAC,aAAY;;;;;;;;;;;;;;;;sGACrD,6LAAC,qIAAA,CAAA,gBAAa;;8GACV,6LAAC,qIAAA,CAAA,aAAU;oGAAC,OAAM;8GAAS;;;;;;8GAC3B,6LAAC,qIAAA,CAAA,aAAU;oGAAC,OAAM;8GAAY;;;;;;8GAC9B,6LAAC,qIAAA,CAAA,aAAU;oGAAC,OAAM;8GAAW;;;;;;;;;;;;;;;;;;8FAGrC,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;gDAOnC,SAAS,mBACL,6LAAC;oDAAI,WAAU;8DACZ,cAAA,6LAAC;wDAAI,WAAU;;0EACX,6LAAC,mIAAA,CAAA,YAAS;0EAAC;;;;;;0EACX,6LAAC;gEAAI,WAAU;;kFACX,6LAAC;wEAAI,WAAU;kFACV,6BACG;;8FACI,6LAAC,gIAAA,CAAA,UAAK;oFAAC,KAAK;oFAAc,KAAI;oFAAkB,QAAO;oFAAO,WAAU;;;;;;8FACxE,6LAAC;oFAAI,WAAU;8FACX,cAAA,6LAAC,qIAAA,CAAA,SAAM;wFAAC,MAAK;wFAAS,MAAK;wFAAO,SAAQ;wFAAc,SAAS;;0GAC7D,6LAAC,+LAAA,CAAA,IAAC;gGAAC,WAAU;;;;;;0GACb,6LAAC;gGAAK,WAAU;0GAAU;;;;;;;;;;;;;;;;;;yGAKtC,6LAAC;4EAAI,WAAU;;8FACX,6LAAC,qMAAA,CAAA,OAAQ;oFAAC,WAAU;;;;;;8FACpB,6LAAC;oFAAE,WAAU;8FAAe;;;;;;;;;;;;;;;;;kFAIxC,6LAAC;wEAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iJAAiJ,uBAAuB;kFACtL,oCACG;;8FACI,6LAAC;oFAAI,WAAU;;sGACX,6LAAC,8NAAA,CAAA,cAAW;4FAAC,WAAU;;;;;;sGACvB,6LAAC;4FAAE,WAAU;sGAA6B;;;;;;;;;;;;8FAE9C,6LAAC;oFAAI,WAAU;8FACX,cAAA,6LAAC,qIAAA,CAAA,SAAM;wFAAC,MAAK;wFAAS,MAAK;wFAAO,SAAQ;wFAAc,SAAS;;0GAC7D,6LAAC,+LAAA,CAAA,IAAC;gGAAC,WAAU;;;;;;0GACb,6LAAC;gGAAK,WAAU;0GAAU;;;;;;;;;;;;;;;;;;yGAKtC,6LAAC;4EAAI,WAAU;;8FACX,6LAAC,mNAAA,CAAA,cAAW;oFAAC,WAAU;;;;;;8FACvB,6LAAC;oFAAE,WAAU;8FAAe;;;;;;;;;;;;;;;;;;;;;;;0EAK5C,6LAAC;gEAAI,WAAU;;kFACX,6LAAC,qIAAA,CAAA,SAAM;wEAAC,MAAK;wEAAS,SAAQ;wEAAU,WAAU;wEAAS,SAAS,IAAM,cAAc;;0FACpF,6LAAC,yMAAA,CAAA,SAAM;gFAAC,WAAU;;;;;;4EAAgB;;;;;;;kFAEtC,6LAAC,qIAAA,CAAA,SAAM;wEAAC,MAAK;wEAAS,SAAQ;wEAAU,WAAU;wEAAS,SAAS;;0FAChE,6LAAC,yMAAA,CAAA,SAAM;gFAAC,WAAU;;;;;;4EAAgB;;;;;;;kFAEtC,6LAAC,qIAAA,CAAA,SAAM;wEAAC,MAAK;wEAAS,SAAQ;wEAAU,WAAU;wEAAS,SAAS;wEAA0B,UAAU;;0FACpG,6LAAC,mNAAA,CAAA,cAAW;gFAAC,WAAU;;;;;;4EAAgB;;;;;;;kFAE3C,6LAAC;wEAAM,MAAK;wEAAO,KAAK;wEAAc,UAAU;wEAAkB,WAAU;wEAAS,QAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kDAOpH,6LAAC,qIAAA,CAAA,eAAY;wCAAC,WAAU;;0DACpB,6LAAC,qIAAA,CAAA,SAAM;gDAAC,MAAK;gDAAS,SAAQ;gDAAQ,SAAS;0DAAS;;;;;;0DACxD,6LAAC;gDAAI,WAAU;;oDACV,SAAS,mBACL,6LAAC,qIAAA,CAAA,SAAM;wDAAC,MAAK;wDAAS,SAAQ;wDAAU,SAAS,IAAM,QAAQ;;0EAC5D,6LAAC,mNAAA,CAAA,YAAS;gEAAC,WAAU;;;;;;4DAAiB;;;;;;;oDAI7C,SAAS,kBACN,6LAAC,qIAAA,CAAA,SAAM;wDAAC,MAAK;wDAAS,SAAS;;4DAAY;0EAClC,6LAAC,qNAAA,CAAA,aAAU;gEAAC,WAAU;;;;;;;;;;;6EAG/B,6LAAC,qIAAA,CAAA,SAAM;wDAAC,MAAK;kEAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUlD,6LAAC,qIAAA,CAAA,SAAM;gBAAC,MAAM;gBAAc,cAAc;0BACtC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;;sCACV,6LAAC,qIAAA,CAAA,eAAY;sCACT,cAAA,6LAAC,qIAAA,CAAA,cAAW;0CAAC;;;;;;;;;;;sCAEjB,6LAAC;4BAAI,WAAU;sCACX,cAAA,6LAAC;gCAAM,KAAK;gCAAU,WAAU;gCAA6B,QAAQ;gCAAC,KAAK;gCAAC,WAAW;;;;;;;;;;;sCAE3F,6LAAC;4BAAO,KAAK;4BAAW,WAAU;;;;;;sCAClC,6LAAC,qIAAA,CAAA,eAAY;;8CACT,6LAAC,qIAAA,CAAA,SAAM;oCAAC,MAAK;oCAAS,SAAQ;oCAAQ,SAAS,IAAM,cAAc;8CAAQ;;;;;;8CAC3E,6LAAC,qIAAA,CAAA,SAAM;oCAAC,MAAK;oCAAS,SAAS;;sDAC3B,6LAAC,yMAAA,CAAA,SAAM;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;AAO/D;GAhZgB;;QASC,iKAAA,CAAA,UAAO;;;KATR","debugId":null}},
    {"offset": {"line": 2506, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/app/admin/patients/page.tsx"],"sourcesContent":["\r\n\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport { detailedPatients as initialPatients, Patient } from \"@/lib/constants\";\r\nimport Link from \"next/link\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { ArrowRight } from \"lucide-react\";\r\nimport { CreatePatientDialog } from \"@/components/create-patient-dialog\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\n\r\n\r\nexport default function Page() {\r\n    const [patients, setPatients] = useState(initialPatients.filter(p => p.condition !== 'Deceased'));\r\n    const [isDialogOpen, setDialogOpen] = useState(false);\r\n    const { toast } = useToast();\r\n\r\n    const handlePatientSaved = (newPatient: Omit<Patient, 'id' | 'medicalHistory' | 'prescriptions' | 'lastVisit' | 'labTests' | 'bloodType' | 'admission'>) => {\r\n        // Generate a random 3-character alphanumeric suffix\r\n        const suffix = Math.random().toString(36).substring(2, 5).toUpperCase();\r\n\r\n        // Find the highest existing patient number to generate a new sequential one\r\n        let maxNumber = 0;\r\n        initialPatients.forEach(p => {\r\n            const numPart = parseInt(p.id.split('-')[1]);\r\n            if (numPart > maxNumber) {\r\n                maxNumber = numPart;\r\n            }\r\n        });\r\n        const newPatientNumber = maxNumber + 1;\r\n        const paddedNumber = String(newPatientNumber).padStart(6, '0');\r\n\r\n        const genderPrefix = newPatient.gender === 'Male' ? 'PM' : 'PF';\r\n        const newId = `${genderPrefix}-${paddedNumber}-${suffix}`;\r\n\r\n        const patientToAdd: Patient = {\r\n            ...newPatient,\r\n            id: newId,\r\n            lastVisit: new Date().toISOString().split('T')[0],\r\n            bloodType: 'O+',\r\n            admission: { isAdmitted: false, admissionDate: null, dischargeDate: null, roomNumber: null, bedNumber: null },\r\n            medicalHistory: [{\r\n                id: `visit-${Date.now()}`,\r\n                date: new Date().toISOString().split('T')[0],\r\n                event: \"Patient Registration\",\r\n                details: `Patient registered with ID ${newId} and assigned to ${newPatient.assignedDoctor}.`,\r\n                doctor: \"Admin\"\r\n            }],\r\n            prescriptions: [],\r\n            labTests: []\r\n        };\r\n        \r\n        initialPatients.unshift(patientToAdd);\r\n        setPatients(initialPatients.filter(p => p.condition !== 'Deceased'));\r\n\r\n        toast({\r\n            title: \"Patient Created\",\r\n            description: `${newPatient.name} has been successfully added with ID ${newId}.`\r\n        });\r\n        setDialogOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <div className=\"flex justify-between items-center\">\r\n                        <div>\r\n                            <CardTitle>All Patients</CardTitle>\r\n                            <CardDescription>A list of all active patients in the system.</CardDescription>\r\n                        </div>\r\n                        <Button onClick={() => setDialogOpen(true)}>Create Patient</Button>\r\n                    </div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <Table>\r\n                        <TableHeader>\r\n                            <TableRow>\r\n                                <TableHead>Name</TableHead>\r\n                                <TableHead>Patient ID</TableHead>\r\n                                <TableHead>Condition</TableHead>\r\n                                <TableHead>Last Visit</TableHead>\r\n                                <TableHead><span className=\"sr-only\">Actions</span></TableHead>\r\n                            </TableRow>\r\n                        </TableHeader>\r\n                        <TableBody>\r\n                            {patients.map((patient) => (\r\n                                <TableRow key={patient.id}>\r\n                                    <TableCell className=\"font-medium flex items-center gap-3\">\r\n                                        <Avatar>\r\n                                            <AvatarImage src={patient.avatarUrl} alt={patient.name} data-ai-hint=\"person\" />\r\n                                            <AvatarFallback>{patient.name.charAt(0)}</AvatarFallback>\r\n                                        </Avatar>\r\n                                        {patient.name}\r\n                                    </TableCell>\r\n                                    <TableCell>{patient.id}</TableCell>\r\n                                    <TableCell>\r\n                                        <Badge variant={patient.condition === 'Critical' ? 'destructive' : 'secondary'}>{patient.condition}</Badge>\r\n                                    </TableCell>\r\n                                    <TableCell>{patient.lastVisit}</TableCell>\r\n                                    <TableCell className=\"text-right\">\r\n                                        <Button asChild variant=\"ghost\" size=\"icon\">\r\n                                            <Link href={`/admin/patients/${patient.id}`}>\r\n                                                <ArrowRight className=\"w-4 h-4\" />\r\n                                                <span className=\"sr-only\">View Patient</span>\r\n                                            </Link>\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </CardContent>\r\n            </Card>\r\n            <CreatePatientDialog\r\n                isOpen={isDialogOpen}\r\n                onClose={() => setDialogOpen(false)}\r\n                onPatientSaved={handlePatientSaved}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n    "],"names":[],"mappings":"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","debugId":null}}]
}