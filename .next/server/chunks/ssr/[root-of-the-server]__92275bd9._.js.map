{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/constants.ts"],"sourcesContent":["\nimport { \n    LayoutDashboard, \n    Users, \n    FlaskConical, \n    CircleDollarSign, \n    Pill, \n    HeartPulse,\n    UserCog,\n    BarChart3,\n    Droplets,\n    Boxes,\n    MessageSquare,\n    Banknote,\n    FileText,\n    LucideIcon,\n    BedDouble,\n    LogOut,\n    Lightbulb,\n    ScanFace,\n    Fingerprint,\n    CalendarClock,\n    Hotel,\n    Send\n} from \"lucide-react\";\n\nexport const roles = [\"admin\", \"doctor\", \"pharmacist\", \"finance\", \"labtech\"] as const;\nexport type Role = (typeof roles)[number];\n\nexport const roleNames: Record<Role, string> = {\n    admin: \"Admin\",\n    doctor: \"Doctor\",\n    pharmacist: \"Pharmacist\",\n    finance: \"Finance\",\n    labtech: \"Lab Tech\",\n};\n\nexport type User = {\n  name: string;\n  email: string;\n  role: Role;\n  password?: string;\n}\n\nexport const users: User[] = [\n    { name: 'Dr. Aisha Bello', email: 'doctor@gmail.com', role: 'doctor', password: 'password123' },\n    { name: 'Yusuf Ibrahim', email: 'pharmacist@gmail.com', role: 'pharmacist', password: 'password123' },\n    { name: 'Fatima Garba', email: 'finance@gmail.com', role: 'finance', password: 'password123' },\n    { name: 'Khalid Ahmed', email: 'labtech@gmail.com', role: 'labtech', password: 'password123' },\n    { name: 'Amina Dauda', email: 'admin@gmail.com', role: 'admin', password: 'password123' },\n];\n\nexport type Message = {\n    id: string;\n    from: string; // Can be a name or role\n    to: Role;\n    content: string;\n    timestamp: string;\n    read: boolean;\n};\n\nconst initialMessages: Message[] = [\n    { \n        id: 'msg-1', \n        from: 'Yusuf Ibrahim', \n        to: 'admin', \n        content: 'We are running critically low on Paracetamol. Please order a new shipment as soon as possible.',\n        timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(), // 2 hours ago\n        read: false \n    },\n    { \n        id: 'msg-2', \n        from: 'Amina Dauda', \n        to: 'pharmacist', \n        content: 'Acknowledged. I will place the order for Paracetamol immediately.',\n        timestamp: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString(), // 1 hour ago\n        read: true\n    },\n    { \n        id: 'msg-3', \n        from: 'Dr. Aisha Bello', \n        to: 'admin', \n        content: 'The new ECG machine in room 304 is malfunctioning. Please have it looked at.',\n        timestamp: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(), // 1 day ago\n        read: true \n    }\n];\n\nclass MessageManager {\n    private messages: Message[];\n    private subscribers: Function[] = [];\n\n    constructor(initialMessages: Message[]) {\n        this.messages = initialMessages.sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n    }\n    \n    getConversations(role: Role) {\n        const conversations: Record<string, Message[]> = {};\n        this.messages.forEach(msg => {\n            if (msg.to === role) {\n                if (!conversations[msg.from]) conversations[msg.from] = [];\n                conversations[msg.from].push(msg);\n            } else if (users.find(u => u.name === msg.from)?.role === role) {\n                const recipientUser = users.find(u => u.role === msg.to);\n                if (recipientUser) {\n                    if (!conversations[recipientUser.name]) conversations[recipientUser.name] = [];\n                    conversations[recipientUser.name].push(msg);\n                }\n            }\n        });\n        \n        // Return a list of conversations, with the most recent first\n        return Object.entries(conversations).map(([participant, messages]) => ({\n            participant,\n            messages,\n            lastMessage: messages[messages.length - 1],\n            unreadCount: messages.filter(m => m.to === role && !m.read).length\n        })).sort((a,b) => new Date(b.lastMessage.timestamp).getTime() - new Date(a.lastMessage.timestamp).getTime());\n    }\n\n    getMessages() {\n        return this.messages;\n    }\n\n    sendMessage({ from, to, content }: { from: string, to: Role, content: string }) {\n        const newMessage: Message = {\n            id: `msg-${Date.now()}`,\n            from,\n            to,\n            content,\n            timestamp: new Date().toISOString(),\n            read: false,\n        };\n        this.messages.push(newMessage);\n        this.notify();\n    }\n\n    markAsRead(participantName: string, role: Role) {\n        this.messages.forEach(msg => {\n            if (msg.from === participantName && msg.to === role && !msg.read) {\n                msg.read = true;\n            }\n        });\n        this.notify();\n    }\n\n    subscribe(callback: Function) {\n        this.subscribers.push(callback);\n        return () => {\n            this.subscribers = this.subscribers.filter(sub => sub !== callback);\n        };\n    }\n\n    private notify() {\n        this.subscribers.forEach(callback => callback(this.messages));\n    }\n}\n\nexport const messageManager = new MessageManager(initialMessages);\n\nexport type Suggestion = {\n    medicine: string;\n    dosage: string;\n    reason: string;\n    status: 'pending' | 'accepted' | 'rejected';\n    rejectionReason?: string;\n};\n\nexport type Prescription = {\n  id: string;\n  patientName: string;\n  medicine: string;\n  dosage: string;\n  doctor: string;\n  status: \"Pending\" | \"Filled\" | \"Unavailable\";\n  price: number;\n  invoiced: boolean;\n  suggestion?: Suggestion;\n  visitId?: string; \n};\n\nexport type MedicalHistoryEntry = {\n    id: string;\n    date: string;\n    event: string;\n    details: string;\n    doctor: string;\n};\n\nexport type BloodType = 'A+' | 'A-' | 'B+' | 'B-' | 'AB+' | 'AB-' | 'O+' | 'O-';\n\nexport type AdmissionDetails = {\n    isAdmitted: boolean;\n    admissionDate: string | null;\n    dischargeDate: string | null;\n    roomNumber: string | null;\n    bedNumber: string | null;\n};\n\nexport type Patient = {\n  id: string;\n  name: string;\n  gender: 'Male' | 'Female';\n  dateOfBirth: string;\n  address: string;\n  maritalStatus: 'Single' | 'Married' | 'Divorced' | 'Widowed';\n  condition: string;\n  lastVisit: string;\n  bloodType: BloodType;\n  assignedDoctor: string;\n  clinicalSummary?: string;\n  medicalHistory: MedicalHistoryEntry[];\n  prescriptions: Prescription[];\n  labTests: LabTest[];\n  admission: AdmissionDetails;\n  avatarUrl?: string;\n  fingerprintId?: string;\n};\n\n\nconst initialPrescriptions: Prescription[] = [\n    { id: 'presc-001', visitId: 'visit-musa-1', patientName: 'Musa Adebayo', medicine: 'Lisinopril', dosage: '10mg', doctor: 'Dr. Aisha Bello', status: 'Pending', price: 25.50, invoiced: false },\n    { id: 'presc-002', visitId: 'visit-zainab-2', patientName: 'Zainab Lawal', medicine: 'Metformin', dosage: '500mg', doctor: 'Dr. Aisha Bello', status: 'Filled', price: 30.00, invoiced: true },\n    { id: 'presc-003', visitId: 'visit-ibrahim-1', patientName: 'Ibrahim Ali', medicine: 'Amoxicillin', dosage: '250mg', doctor: 'Dr. Aisha Bello', status: 'Pending', price: 15.75, invoiced: false },\n    { id: 'presc-004', visitId: 'visit-halima-1', patientName: 'Halima Abubakar', medicine: 'Ibuprofen', dosage: '200mg', doctor: 'Dr. Aisha Bello', status: 'Unavailable', price: 10.00, invoiced: true },\n];\n\nexport type LabTest = {\n    id: string;\n    patient: string;\n    test: string;\n    instructions: string;\n    collected: string;\n    status: 'Pending' | 'Processing' | 'Completed';\n    results?: string;\n    price: number;\n    invoiced: boolean;\n    visitId?: string;\n}\n\nconst initialLabTests: LabTest[] = [\n    { id: 'lab-001', visitId: 'visit-bello-1', patient: 'Muhammad Bello', test: 'Complete Blood Count', instructions: 'Standard CBC panel.', collected: '2024-05-12 09:00', status: 'Pending', price: 75.00, invoiced: false },\n    { id: 'lab-002', visitId: 'visit-samira-1', patient: 'Samira Umar', test: 'Lipid Panel', instructions: 'Fasting required for 12 hours prior.', collected: '2024-05-12 09:30', status: 'Completed', results: 'Total Cholesterol: 210 mg/dL, HDL: 55 mg/dL, LDL: 130 mg/dL', price: 120.00, invoiced: true },\n    { id: 'lab-003', visitId: 'visit-sani-1', patient: 'Abdulkarim Sani', test: 'Basic Metabolic Panel', instructions: 'Standard BMP.', collected: '2024-05-12 10:00', status: 'Processing', price: 95.00, invoiced: false },\n    { id: 'lab-004', patient: 'Amina Salisu', test: 'Urinalysis', instructions: 'Clean catch midstream sample.', collected: '2024-05-12 10:15', status: 'Pending', price: 45.00, invoiced: false },\n    { id: 'lab-005', visitId: 'visit-musa-1', patient: 'Musa Adebayo', test: 'Thyroid Panel', instructions: 'TSH and T4 test.', collected: '2024-05-13 08:30', status: 'Pending', price: 110.00, invoiced: false },\n    { id: 'lab-006', visitId: 'visit-zainab-1', patient: 'Zainab Lawal', test: 'Cardiac Enzymes', instructions: 'Troponin I test.', collected: '2024-05-13 08:45', status: 'Processing', price: 250.00, invoiced: false },\n];\n\nexport const detailedPatients: Patient[] = [\n  { \n    id: 'PM-000001-A4E',\n    name: 'Musa Adebayo', \n    gender: 'Male',\n    dateOfBirth: '1975-08-22',\n    address: '15, Aminu Kano Crescent, Wuse II, Abuja',\n    maritalStatus: 'Married',\n    condition: 'Stable', \n    lastVisit: '2024-05-10',\n    bloodType: 'O+',\n    assignedDoctor: 'Dr. Aisha Bello',\n    clinicalSummary: 'Patient has a long-standing history of hypertension, managed with Lisinopril. Regular monitoring of blood pressure is advised. No known allergies.',\n    medicalHistory: [\n        { id: 'visit-musa-2', date: '2024-05-10', event: 'Follow-up Consultation', details: 'Routine check-up, vitals are normal. Continue with current medication.', doctor: 'Dr. Aisha Bello' },\n        { id: 'visit-musa-1', date: '2024-03-15', event: 'Initial Diagnosis', details: 'Diagnosed with Hypertension. Prescribed Lisinopril and ordered a Thyroid Panel to check for underlying issues.', doctor: 'Dr. Aisha Bello' }\n    ],\n    prescriptions: initialPrescriptions.filter(p => p.patientName === 'Musa Adebayo'),\n    labTests: initialLabTests.filter(t => t.patient === 'Musa Adebayo'),\n    admission: { isAdmitted: false, admissionDate: null, dischargeDate: null, roomNumber: null, bedNumber: null },\n    avatarUrl: \"https://placehold.co/100x100.png?text=MA\",\n    fingerprintId: \"FP_17163052321\"\n  },\n  { \n    id: 'PF-000002-B1C',\n    name: 'Zainab Lawal', \n    gender: 'Female',\n    dateOfBirth: '1968-04-15',\n    address: '22, Adetokunbo Ademola Crescent, Wuse II, Abuja',\n    maritalStatus: 'Widowed',\n    condition: 'Critical', \n    lastVisit: '2024-05-12',\n    bloodType: 'A-',\n    assignedDoctor: 'Dr. Aisha Bello',\n    clinicalSummary: 'Patient manages Type 2 Diabetes with Metformin. Admitted for acute cardiac symptoms. High-risk for cardiovascular events.',\n    medicalHistory: [\n        { id: 'visit-zainab-1', date: '2024-05-12', event: 'Emergency Admission', details: 'Admitted for severe chest pain. Cardiac enzyme test ordered.', doctor: 'Dr. Aisha Bello' },\n        { id: 'visit-zainab-2', date: '2023-11-20', event: 'Diagnosis', details: 'Diagnosed with Type 2 Diabetes. Prescribed Metformin.', doctor: 'Dr. Aisha Bello' }\n    ],\n    prescriptions: initialPrescriptions.filter(p => p.patientName === 'Zainab Lawal'),\n    labTests: initialLabTests.filter(t => t.patient === 'Zainab Lawal'),\n    admission: { isAdmitted: true, admissionDate: '2024-05-12', dischargeDate: null, roomNumber: '101', bedNumber: 'A' },\n    avatarUrl: \"https://placehold.co/100x100.png?text=ZL\"\n  },\n  { \n    id: 'PM-000003-D9F',\n    name: 'Ibrahim Ali', \n    gender: 'Male',\n    dateOfBirth: '1990-11-02',\n    address: '4, Kolda Link, Wuse, Abuja',\n    maritalStatus: 'Single',\n    condition: 'Improving', \n    lastVisit: '2024-05-09',\n    bloodType: 'B+',\n    assignedDoctor: 'Dr. Aisha Bello',\n    medicalHistory: [\n        { id: 'visit-ibrahim-1', date: '2024-05-09', event: 'Follow-up', details: 'Follow-up for bacterial infection. Responding well to antibiotics. Prescribed Amoxicillin.', doctor: 'Dr. Aisha Bello' },\n    ],\n    prescriptions: initialPrescriptions.filter(p => p.patientName === 'Ibrahim Ali'),\n    labTests: initialLabTests.filter(t => t.patient === 'Ibrahim Ali'),\n    admission: { isAdmitted: false, admissionDate: null, dischargeDate: null, roomNumber: null, bedNumber: null },\n    avatarUrl: \"https://placehold.co/100x100.png?text=IA\",\n    fingerprintId: \"FP_17163052322\"\n  },\n  { \n    id: 'PF-000004-G2H',\n    name: 'Halima Abubakar',\n    gender: 'Female', \n    dateOfBirth: '1985-01-30',\n    address: '10, Ladi Kwali Street, Wuse, Abuja',\n    maritalStatus: 'Married',\n    condition: 'Stable', \n    lastVisit: '2024-05-11',\n    bloodType: 'AB+',\n    assignedDoctor: 'Dr. Aisha Bello',\n     medicalHistory: [\n        { id: 'visit-halima-1', date: '2024-05-11', event: 'Check-up', details: 'Complaining of seasonal allergies. Prescribed Ibuprofen for symptomatic relief.', doctor: 'Dr. Aisha Bello' },\n    ],\n    prescriptions: initialPrescriptions.filter(p => p.patientName === 'Halima Abubakar'),\n    labTests: initialLabTests.filter(t => t.patient === 'Halima Abubakar'),\n    admission: { isAdmitted: false, admissionDate: null, dischargeDate: null, roomNumber: null, bedNumber: null },\n    avatarUrl: \"https://placehold.co/100x100.png?text=HA\"\n  },\n  { \n    id: 'PM-000005-K3L',\n    name: 'Muhammad Bello', \n    gender: 'Male',\n    dateOfBirth: '1995-06-10',\n    address: '7, Libreville Street, Wuse, Abuja',\n    maritalStatus: 'Single',\n    condition: 'Critical', \n    lastVisit: '2024-05-12',\n    bloodType: 'O-',\n    assignedDoctor: 'Dr. Aisha Bello',\n     medicalHistory: [\n        { id: 'visit-bello-1', date: '2024-05-12', event: 'Admission', details: 'Admitted for observation after a minor accident. Ordered a CBC.', doctor: 'Dr. Aisha Bello' },\n    ],\n    prescriptions: [],\n    labTests: initialLabTests.filter(t => t.patient === 'Muhammad Bello'),\n    admission: { isAdmitted: true, admissionDate: '2024-05-12', dischargeDate: null, roomNumber: null, bedNumber: null },\n    avatarUrl: \"https://placehold.co/100x100.png?text=MB\",\n    fingerprintId: \"FP_17163052323\"\n  },\n   {\n    id: 'PF-000006-R2D',\n    name: 'Samira Umar',\n    gender: 'Female',\n    dateOfBirth: '1982-03-25',\n    address: '3, Agadez Street, Wuse II, Abuja',\n    maritalStatus: 'Married',\n    condition: 'Stable',\n    lastVisit: '2024-05-14',\n    bloodType: 'B-',\n    assignedDoctor: 'Dr. Aisha Bello',\n    medicalHistory: [\n      { id: 'visit-samira-1', date: '2024-05-14', event: 'New Consultation', details: 'Initial consultation for persistent headaches. Ordered a lipid panel to rule out underlying conditions.', doctor: 'Dr. Aisha Bello' }\n    ],\n    prescriptions: [],\n    labTests: initialLabTests.filter(t => t.patient === 'Samira Umar'),\n    admission: { isAdmitted: false, admissionDate: null, dischargeDate: null, roomNumber: null, bedNumber: null },\n    avatarUrl: \"https://placehold.co/100x100.png?text=SU\"\n  },\n  {\n    id: 'PM-000007-S1B',\n    name: 'Abdulkarim Sani',\n    gender: 'Male',\n    dateOfBirth: '2000-07-18',\n    address: '18, Dalaba Street, Wuse, Abuja',\n    maritalStatus: 'Single',\n    condition: 'Normal',\n    lastVisit: '2024-05-15',\n    bloodType: 'A+',\n    assignedDoctor: 'Dr. Aisha Bello',\n    medicalHistory: [\n      { id: 'visit-sani-1', date: '2024-05-15', event: 'Routine Checkup', details: 'Annual physical, all vitals normal. Ordered a BMP as part of routine screening.', doctor: 'Dr. Aisha Bello' }\n    ],\n    prescriptions: [],\n    labTests: initialLabTests.filter(t => t.patient === 'Abdulkarim Sani'),\n    admission: { isAdmitted: false, admissionDate: null, dischargeDate: null, roomNumber: null, bedNumber: null },\n    avatarUrl: \"https://placehold.co/100x100.png?text=AS\",\n    fingerprintId: \"FP_17163052324\"\n  }\n];\n\nexport type Bed = {\n    id: string; // e.g., \"101-A\"\n    roomNumber: string;\n    bedNumber: string;\n    status: 'Available' | 'Occupied';\n    patientId: string | null;\n};\n\nexport const initialBeds: Bed[] = [\n    { id: '101-A', roomNumber: '101', bedNumber: 'A', status: 'Occupied', patientId: 'PF-000002-B1C' },\n    { id: '101-B', roomNumber: '101', bedNumber: 'B', status: 'Available', patientId: null },\n    { id: '102-A', roomNumber: '102', bedNumber: 'A', status: 'Available', patientId: null },\n    { id: '102-B', roomNumber: '102', bedNumber: 'B', status: 'Available', patientId: null },\n    { id: '201-A', roomNumber: '201', bedNumber: 'A', status: 'Available', patientId: null },\n    { id: '201-B', roomNumber: '201', bedNumber: 'B', status: 'Available', patientId: null },\n];\n\nclass BedManager {\n    private beds: Bed[];\n    private subscribers: Function[] = [];\n\n    constructor(initialBeds: Bed[]) {\n        this.beds = initialBeds;\n    }\n\n    getBeds() {\n        return this.beds;\n    }\n\n    getAvailableBeds() {\n        return this.beds.filter(b => b.status === 'Available');\n    }\n\n    addRoom(roomNumber: string) {\n        const roomExists = this.beds.some(b => b.roomNumber === roomNumber);\n        if (roomExists) {\n            throw new Error(`Room ${roomNumber} already exists.`);\n        }\n        // Add a default bed 'A' when a new room is created\n        this.addBed(roomNumber, 'A');\n    }\n\n    addBed(roomNumber: string, bedNumber: string) {\n        const bedId = `${roomNumber}-${bedNumber}`;\n        const bedExists = this.beds.some(b => b.id === bedId);\n        if (bedExists) {\n            throw new Error(`Bed ${bedNumber} in Room ${roomNumber} already exists.`);\n        }\n        const newBed: Bed = {\n            id: bedId,\n            roomNumber,\n            bedNumber,\n            status: 'Available',\n            patientId: null\n        };\n        this.beds.push(newBed);\n        this.notify();\n    }\n\n    deleteBed(bedId: string) {\n        const bedIndex = this.beds.findIndex(b => b.id === bedId);\n        if (bedIndex === -1) {\n            throw new Error('Bed not found.');\n        }\n        if (this.beds[bedIndex].status === 'Occupied') {\n            throw new Error('Cannot delete an occupied bed.');\n        }\n        this.beds.splice(bedIndex, 1);\n        this.notify();\n    }\n\n    assignBed(patientId: string, bedId: string) {\n        const patient = detailedPatients.find(p => p.id === patientId);\n        const bed = this.beds.find(b => b.id === bedId);\n\n        if (patient && bed && bed.status === 'Available') {\n            // Free up old bed if any\n            const oldBed = this.beds.find(b => b.patientId === patientId);\n            if (oldBed) {\n                oldBed.status = 'Available';\n                oldBed.patientId = null;\n            }\n            \n            // Assign new bed\n            bed.status = 'Occupied';\n            bed.patientId = patientId;\n            \n            patient.admission.roomNumber = bed.roomNumber;\n            patient.admission.bedNumber = bed.bedNumber;\n            \n            this.notify();\n            patientManager.notify();\n        }\n    }\n    \n    freeUpBedForPatient(patientId: string) {\n        const bed = this.beds.find(b => b.patientId === patientId);\n        if (bed) {\n            bed.status = 'Available';\n            bed.patientId = null;\n            this.notify();\n        }\n    }\n\n    subscribe(callback: (beds: Bed[]) => void) {\n        this.subscribers.push(callback);\n        return () => {\n            this.subscribers = this.subscribers.filter(sub => sub !== callback);\n        };\n    }\n\n    private notify() {\n        this.subscribers.forEach(callback => callback(this.beds));\n    }\n}\n\nexport const bedManager = new BedManager(initialBeds);\n\n\nclass PatientManager {\n    private patients: Patient[];\n    private subscribers: Function[] = [];\n\n    constructor(initialPatients: Patient[]) {\n        this.patients = initialPatients;\n    }\n\n    getPatients() {\n        return this.patients;\n    }\n\n    getAdmittedPatients() {\n        return this.patients.filter(p => p.admission.isAdmitted);\n    }\n    \n    createVisit(patientId: string, event: string, details: string, doctor: string) {\n        const patient = this.patients.find(p => p.id === patientId);\n        if (patient) {\n            const newVisit: MedicalHistoryEntry = {\n                id: `visit-${Date.now()}`,\n                date: new Date().toISOString().split('T')[0],\n                event,\n                details,\n                doctor,\n            };\n            patient.medicalHistory.unshift(newVisit);\n            this.notify();\n        }\n    }\n\n    updateVisitDetails(patientId: string, visitId: string, newDetails: string) {\n        const patient = this.patients.find(p => p.id === patientId);\n        if (patient) {\n            const visit = patient.medicalHistory.find(v => v.id === visitId);\n            if(visit) {\n                visit.details = newDetails;\n                this.notify();\n            }\n        }\n    }\n\n    updateClinicalSummary(patientId: string, newSummary: string) {\n        const patient = this.patients.find(p => p.id === patientId);\n        if (patient) {\n            patient.clinicalSummary = newSummary;\n            this.notify();\n        }\n    }\n\n    scheduleFollowUp(patientId: string, date: Date, reason: string, doctor: string) {\n        const patient = this.patients.find(p => p.id === patientId);\n        if(patient) {\n             const followUpVisit: MedicalHistoryEntry = {\n                id: `visit-${Date.now()}`,\n                date: new Date().toISOString().split('T')[0],\n                event: \"Follow-up Scheduled\",\n                details: `Follow-up scheduled on ${date.toISOString().split('T')[0]}. ${reason}`,\n                doctor,\n            };\n            patient.medicalHistory.unshift(followUpVisit);\n            this.notify();\n        }\n    }\n\n    addNoteToLatestVisit(patientId: string, note: string) {\n        const patient = this.patients.find(p => p.id === patientId);\n        if (patient && patient.medicalHistory.length > 0) {\n            // Appends to the details of the most recent visit\n            patient.medicalHistory[0].details += `\\n\\n- ${note}`;\n            this.notify();\n        }\n    }\n\n    markPatientAsDeceased(patientId: string, doctorName: string, formalReport: string) {\n        const patient = this.patients.find(p => p.id === patientId);\n        if (patient) {\n            patient.condition = 'Deceased';\n            \n            patient.medicalHistory.unshift({\n                id: `visit-${Date.now()}`,\n                date: new Date().toISOString().split('T')[0],\n                event: \"Patient Deceased\",\n                details: formalReport,\n                doctor: doctorName\n            });\n\n            if (patient.admission.isAdmitted) {\n                this.dischargePatient(patientId, true);\n            }\n            this.notify();\n        }\n    }\n    \n    referPatient(patientId: string, doctorName: string, referralLetter: string, receivingEntity: string) {\n        const patient = this.patients.find(p => p.id === patientId);\n        if (patient) {\n            patient.medicalHistory.unshift({\n                id: `visit-${Date.now()}`,\n                date: new Date().toISOString().split('T')[0],\n                event: `Patient Referral to ${receivingEntity}`,\n                details: referralLetter,\n                doctor: doctorName\n            });\n            this.notify();\n        }\n    }\n\n    updatePatientCondition(patientId: string, newCondition: string, doctorName?: string) {\n        const patient = this.patients.find(p => p.id === patientId);\n        if (patient) {\n            const oldCondition = patient.condition;\n            patient.condition = newCondition;\n            \n            if (doctorName) {\n                const details = `Patient condition changed from ${oldCondition} to ${newCondition}.`;\n                patient.medicalHistory.unshift({\n                    id: `visit-${Date.now()}`,\n                    date: new Date().toISOString().split('T')[0],\n                    event: \"Condition Update\",\n                    details,\n                    doctor: doctorName\n                });\n            }\n            this.notify();\n        }\n    }\n\n    admitPatient(patientId: string) {\n        const patient = this.patients.find(p => p.id === patientId);\n        if (patient && !patient.admission.isAdmitted && patient.condition !== 'Deceased') {\n            patient.admission.isAdmitted = true;\n            patient.admission.admissionDate = new Date().toISOString().split('T')[0];\n            patient.medicalHistory.unshift({\n                id: `visit-${Date.now()}`,\n                date: patient.admission.admissionDate,\n                event: \"Patient Admitted\",\n                details: \"Patient has been admitted to the hospital and is awaiting bed assignment.\",\n                doctor: patient.assignedDoctor\n            });\n            this.notify();\n        }\n    }\n    \n    dischargePatient(patientId: string, isDeceased = false) {\n        const patient = this.patients.find(p => p.id === patientId);\n        if (patient && patient.admission.isAdmitted) {\n            patient.admission.isAdmitted = false;\n            patient.admission.dischargeDate = new Date().toISOString().split('T')[0];\n            \n            if (!isDeceased) {\n                patient.medicalHistory.unshift({\n                    id: `visit-${Date.now()}`,\n                    date: patient.admission.dischargeDate,\n                    event: \"Patient Discharged\",\n                    details: `Discharged from Room ${patient.admission.roomNumber || 'N/A'} - Bed ${patient.admission.bedNumber || 'N/A'}.`,\n                    doctor: patient.assignedDoctor\n                });\n            }\n\n            bedManager.freeUpBedForPatient(patientId);\n\n            patient.admission.roomNumber = null;\n            patient.admission.bedNumber = null;\n\n            this.notify();\n        }\n    }\n\n    subscribe(callback: Function) {\n        this.subscribers.push(callback);\n        return () => {\n            this.subscribers = this.subscribers.filter(sub => sub !== callback);\n        };\n    }\n\n    notify() {\n        this.subscribers.forEach(callback => callback(this.patients));\n    }\n}\n\nexport const patientManager = new PatientManager(detailedPatients);\n\nexport type NavLink = { \n    href: string; \n    label: string; \n    icon: LucideIcon \n};\n\nexport type NavLinkGroup = {\n    label: string;\n    links: NavLink[];\n};\n\nexport type NavLinks = {\n    [key in Role]: (NavLink | NavLinkGroup)[];\n};\n\n\nexport const navLinks: NavLinks = {\n    admin: [\n        { href: \"/admin\", label: \"Dashboard\", icon: LayoutDashboard },\n        {\n            label: \"Patient Management\",\n            links: [\n                { href: \"/admin/patients\", label: \"All Patients\", icon: Users },\n                { href: \"/admin/identification\", label: \"Identification\", icon: ScanFace },\n                { href: \"/admin/admissions\", label: \"Admissions\", icon: BedDouble },\n                { href: \"/admin/follow-ups\", label: \"Follow-ups\", icon: CalendarClock },\n                { href: \"/admin/referrals\", label: \"Referrals\", icon: Send },\n                { href: \"/admin/deceased\", label: \"Deceased Records\", icon: LogOut },\n            ]\n        },\n        {\n            label: \"Hospital Operations\",\n            links: [\n                { href: \"/admin/rooms\", label: \"Rooms & Beds\", icon: Hotel },\n                { href: \"/admin/pharmacy\", label: \"Pharmacy\", icon: Pill },\n                { href: \"/admin/lab\", label: \"Lab\", icon: FlaskConical },\n            ]\n        },\n        {\n            label: \"Administration\",\n            links: [\n                { href: \"/admin/billing\", label: \"Billing\", icon: CircleDollarSign },\n                { href: \"/admin/messages\", label: \"Messages\", icon: MessageSquare },\n                { href: \"/admin/reports\", label: \"Reports\", icon: BarChart3 },\n            ]\n        },\n        { href: \"/admin/staff\", label: \"Staff\", icon: UserCog },\n    ],\n    doctor: [\n        { href: \"/doctor\", label: \"Dashboard\", icon: LayoutDashboard },\n        { href: \"/doctor/patients\", label: \"All Patients\", icon: Users },\n        { href: \"/doctor/admissions\", label: \"Admissions\", icon: BedDouble },\n        { href: \"/doctor/risk-assessment\", label: \"Risk Assessment\", icon: HeartPulse },\n        { href: \"/doctor/deceased\", label: \"Deceased Records\", icon: LogOut },\n    ],\n    pharmacist: [\n        { href: \"/pharmacist\", label: \"Dashboard\", icon: LayoutDashboard },\n        { href: \"/pharmacist/inventory\", label: \"Inventory\", icon: Boxes },\n        { href: \"/pharmacist/prescriptions\", label: \"Prescriptions\", icon: FileText },\n        { href: \"/pharmacist/requests\", label: \"Requests\", icon: MessageSquare },\n    ],\n    finance: [\n        { href: \"/finance\", label: \"Dashboard\", icon: LayoutDashboard },\n        { href: \"/finance/invoices\", label: \"Manage Invoices\", icon: FileText },\n    ],\n    labtech: [\n        { href: \"/labtech\", label: \"Dashboard\", icon: LayoutDashboard },\n        { href: \"/labtech/tests\", label: \"Patient Tests\", icon: Users },\n        { href: \"/labtech/blood-bank\", label: \"Blood Bank\", icon: Droplets },\n    ],\n};\n\n// Global state for prescriptions\nclass PrescriptionManager {\n  private prescriptions: Prescription[];\n  private subscribers: Function[] = [];\n\n  constructor(initialPrescriptions: Prescription[]) {\n    this.prescriptions = initialPrescriptions;\n  }\n\n  getPrescriptions() {\n    return this.prescriptions;\n  }\n  \n  getPatientPrescriptions(patientId: string) {\n    const patient = detailedPatients.find(p => p.id === patientId);\n    if (!patient) return [];\n    \n    // This is a simplified way to link prescriptions. In a real app, this would be a DB relation.\n    return this.prescriptions.filter(p => p.patientName === patient.name);\n  }\n  \n  updatePrescription(updatedPrescription: Prescription) {\n    const index = this.prescriptions.findIndex(p => p.id === updatedPrescription.id);\n    if (index !== -1) {\n        this.prescriptions[index] = updatedPrescription;\n        \n        const patient = detailedPatients.find(p => p.name === updatedPrescription.patientName);\n        if (patient) {\n            const patientPrescriptionIndex = patient.prescriptions.findIndex(p => p.id === updatedPrescription.id);\n            if(patientPrescriptionIndex !== -1) {\n                patient.prescriptions[patientPrescriptionIndex] = updatedPrescription;\n            }\n        }\n        this.notify();\n    }\n  }\n\n  updatePrescriptionStatus(id: string, status: Prescription['status']) {\n    const index = this.prescriptions.findIndex(p => p.id === id);\n    if (index !== -1) {\n      this.prescriptions[index].status = status;\n      this.notify();\n    }\n  }\n  \n  addPrescription(prescription: Omit<Prescription, 'id' | 'price' | 'invoiced'>) {\n    const patient = detailedPatients.find(p => p.name === prescription.patientName);\n    if (!patient || patient.medicalHistory.length === 0) return; // Cannot add if no visits exist\n\n    // Associate with the most recent visit\n    const lastVisitId = patient.medicalHistory[0].id;\n\n    const newPrescription: Prescription = {\n        ...prescription,\n        id: `presc-${Date.now()}`,\n        price: Math.floor(Math.random() * 50) + 10, // Mock price\n        invoiced: false,\n        visitId: lastVisitId\n    };\n    this.prescriptions.unshift(newPrescription);\n    patient.prescriptions.unshift(newPrescription);\n    \n    this.notify();\n    patientManager.notify(); // Notify patient manager to trigger UI updates\n  }\n\n  deletePrescription(patientId: string, prescriptionId: string) {\n      this.prescriptions = this.prescriptions.filter(p => p.id !== prescriptionId);\n      const patient = detailedPatients.find(p => p.id === patientId);\n      if (patient) {\n          patient.prescriptions = patient.prescriptions.filter(p => p.id !== prescriptionId);\n      }\n      this.notify();\n  }\n  \n    addSuggestion(prescriptionId: string, suggestion: Omit<Suggestion, 'status'>, patientId: string) {\n        const prescription = this.prescriptions.find(p => p.id === prescriptionId);\n        if (prescription) {\n            prescription.suggestion = { ...suggestion, status: 'pending' };\n            this.notify();\n            patientManager.notify();\n        }\n    }\n\n    acceptSuggestion(prescriptionId: string, patientId: string) {\n        const prescription = this.prescriptions.find(p => p.id === prescriptionId);\n        const patient = detailedPatients.find(p => p.id === patientId);\n\n        if (prescription && prescription.suggestion && patient) {\n            const oldMedicine = prescription.medicine;\n            prescription.medicine = prescription.suggestion.medicine;\n            prescription.dosage = prescription.suggestion.dosage;\n            prescription.suggestion.status = 'accepted';\n            \n             patient.medicalHistory.unshift({\n                id: `visit-${Date.now()}`,\n                date: new Date().toISOString().split('T')[0],\n                event: 'Suggestion Accepted',\n                details: `Doctor accepted suggestion to change ${oldMedicine} to ${prescription.medicine}.`,\n                doctor: prescription.doctor\n            });\n\n            this.notify();\n            patientManager.notify();\n        }\n    }\n\n    rejectSuggestion(prescriptionId: string, reason: string, patientId: string) {\n        const prescription = this.prescriptions.find(p => p.id === prescriptionId);\n         const patient = detailedPatients.find(p => p.id === patientId);\n\n        if (prescription && prescription.suggestion && patient) {\n            prescription.suggestion.status = 'rejected';\n            prescription.suggestion.rejectionReason = reason;\n\n             patient.medicalHistory.unshift({\n                id: `visit-${Date.now()}`,\n                date: new Date().toISOString().split('T')[0],\n                event: 'Suggestion Rejected',\n                details: `Doctor rejected suggestion. Reason: ${reason}`,\n                doctor: prescription.doctor\n            });\n            this.notify();\n            patientManager.notify();\n        }\n    }\n\n  subscribe(callback: Function) {\n    this.subscribers.push(callback);\n    return () => {\n      this.subscribers = this.subscribers.filter(sub => sub !== callback);\n    };\n  }\n\n  private notify() {\n    this.subscribers.forEach(callback => callback(this.prescriptions));\n  }\n}\n\nexport const prescriptionManager = new PrescriptionManager(initialPrescriptions);\n\nexport const mockFinancialData = [\n  { name: 'Jan', revenue: 120000, expenses: 75000 },\n  { name: 'Feb', revenue: 150000, expenses: 85000 },\n  { name: 'Mar', revenue: 170000, expenses: 100000 },\n  { name: 'Apr', revenue: 210000, expenses: 120000 },\n  { name: 'May', revenue: 180000, expenses: 110000 },\n  { name: 'Jun', revenue: 220000, expenses: 130000 },\n];\n\nexport const mockLabVisitsData = [\n  { month: 'Jan', visits: 120 },\n  { month: 'Feb', visits: 150 },\n  { month: 'Mar', visits: 170 },\n  { month: 'Apr', visits: 210 },\n  { month: 'May', visits: 180 },\n  { month: 'Jun', visits: 220 },\n];\n\nexport type Medication = {\n    id: string;\n    name: string;\n    available: number;\n    lowStock: number;\n    price: number;\n}\n\nconst initialMedications: Medication[] = [\n  { id: 'med-001', name: 'Paracetamol', available: 150, lowStock: 50, price: 500.00 },\n  { id: 'med-002', name: 'Ibuprofen', available: 80, lowStock: 20, price: 750.00 },\n  { id: 'med-003', name: 'Amoxicillin', available: 45, lowStock: 30, price: 1225.00 },\n  { id: 'med-004', name: 'Lisinopril', available: 120, lowStock: 40, price: 2550.00 },\n  { id: 'med-005', name: 'Metformin', available: 200, lowStock: 60, price: 3000.00 },\n];\n\nclass MedicationManager {\n    private medications: Medication[];\n    private subscribers: Function[] = [];\n\n    constructor(initialMedications: Medication[]) {\n        this.medications = initialMedications;\n    }\n\n    getMedications() {\n        return this.medications;\n    }\n    \n    updateMedication(updatedMedication: Medication) {\n        const index = this.medications.findIndex(m => m.id === updatedMedication.id);\n        if (index !== -1) {\n            this.medications[index] = updatedMedication;\n            this.notify();\n        }\n    }\n\n    addMedication(medication: Omit<Medication, 'id'>) {\n        const newMedication: Medication = {\n            ...medication,\n            id: `med-${Date.now()}`,\n        };\n        this.medications.push(newMedication);\n        this.notify();\n    }\n    \n    deleteMedication(medicationId: string) {\n        this.medications = this.medications.filter(m => m.id !== medicationId);\n        this.notify();\n    }\n\n    subscribe(callback: (medications: Medication[]) => void) {\n        this.subscribers.push(callback);\n        return () => {\n            this.subscribers = this.subscribers.filter(sub => sub !== callback);\n        };\n    }\n\n    private notify() {\n        this.subscribers.forEach(callback => callback(this.medications));\n    }\n}\nexport const medicationManager = new MedicationManager(initialMedications);\n\nclass LabTestManager {\n    private labTests: LabTest[];\n    private subscribers: Function[] = [];\n\n    constructor(initialTests: LabTest[]) {\n        this.labTests = initialTests;\n    }\n\n    getLabTests() {\n        return this.labTests;\n    }\n\n    addLabTest(testRequest: Omit<LabTest, 'id' | 'price' | 'invoiced' | 'collected' | 'status'> & { doctor: string }) {\n        const patient = detailedPatients.find(p => p.name === testRequest.patient);\n        if (!patient || patient.medicalHistory.length === 0) return; // Cannot add if no visits exist\n\n        // Associate with the most recent visit\n        const lastVisitId = patient.medicalHistory[0].id;\n        \n        const newTest: LabTest = {\n            ...testRequest,\n            id: `lab-${Date.now()}`,\n            collected: new Date().toISOString().split('T')[0],\n            status: 'Pending',\n            price: 0, // Price will be set by lab tech upon completion\n            invoiced: false,\n            visitId: lastVisitId,\n        };\n        this.labTests.unshift(newTest);\n        patient.labTests.unshift(newTest);\n        \n        this.notify();\n        patientManager.notify();\n    }\n\n    updateLabTest(testId: string, updates: Partial<Omit<LabTest, 'id'>>) {\n        const testIndex = this.labTests.findIndex(t => t.id === testId);\n        if (testIndex !== -1) {\n            \n            const originalTest = this.labTests[testIndex];\n            const updatedTest = { ...originalTest, ...updates };\n            this.labTests[testIndex] = updatedTest;\n\n            // If completed, add results to medical history\n            if (updates.status === 'Completed' && originalTest.status !== 'Completed') {\n                const patient = detailedPatients.find(p => p.name === updatedTest.patient);\n                patient?.medicalHistory.unshift({\n                    id: `visit-${Date.now()}`,\n                    date: new Date().toISOString().split('T')[0],\n                    event: `Lab Test Results: ${updatedTest.test}`,\n                    details: `Results: ${updatedTest.results}`,\n                    doctor: 'Lab'\n                });\n                 patientManager.notify();\n            }\n            this.notify();\n        }\n    }\n\n    subscribe(callback: (tests: LabTest[]) => void) {\n        this.subscribers.push(callback);\n        return () => {\n            this.subscribers = this.subscribers.filter(sub => sub !== callback);\n        };\n    }\n\n    private notify() {\n        this.subscribers.forEach(callback => callback(this.labTests));\n    }\n}\n\nexport const labTestManager = new LabTestManager(initialLabTests);\n\n\nexport type InvoiceItem = {\n    id: string; // prescription or lab test id\n    name: string;\n    type: 'Prescription' | 'Lab Test';\n    price: number;\n}\n\nexport type Invoice = {\n    id: string;\n    patientName: string;\n    amount: number;\n    dueDate: string;\n    status: 'Paid' | 'Pending' | 'Overdue';\n    items: InvoiceItem[];\n    doctorName?: string;\n}\n\nexport const initialInvoices: Invoice[] = [\n    { \n        id: 'INV-001', \n        patientName: 'Musa Adebayo', \n        amount: 250.00, \n        dueDate: '2024-05-20', \n        status: 'Paid',\n        doctorName: 'Dr. Aisha Bello',\n        items: [\n            { id: 'presc-001', name: 'Lisinopril', type: 'Prescription', price: 25.50 },\n            { id: 'lab-005', name: 'Thyroid Panel', type: 'Lab Test', price: 110.00 }\n        ]\n    },\n    { id: 'INV-002', patientName: 'Zainab Lawal', amount: 150.75, dueDate: '2024-06-01', status: 'Pending', doctorName: 'Dr. Aisha Bello', items: [] },\n    { id: 'INV-003', patientName: 'Ibrahim Ali', amount: 45.50, dueDate: '2024-04-30', status: 'Paid', doctorName: 'Dr. Aisha Bello', items: [] },\n    { id: 'INV-004', patientName: 'Halima Abubakar', amount: 800.00, dueDate: '2024-05-01', status: 'Overdue', doctorName: 'Dr. Aisha Bello', items: [] },\n    { id: 'INV-005', patientName: 'Muhammad Bello', amount: 320.00, dueDate: '2024-06-15', status: 'Pending', doctorName: 'Dr. Aisha Bello', items: [] },\n];\n\nexport type BloodUnit = {\n    bloodType: BloodType;\n    quantity: number; // in units\n};\n\nexport const bloodBankInventory: BloodUnit[] = [\n    { bloodType: 'A+', quantity: 20 },\n    { bloodType: 'A-', quantity: 15 },\n    { bloodType: 'B+', quantity: 18 },\n    { bloodType: 'B-', quantity: 10 },\n    { bloodType: 'AB+', quantity: 8 },\n    { bloodType: 'AB-', quantity: 5 },\n    { bloodType: 'O+', quantity: 30 },\n    { bloodType: 'O-', quantity: 25 },\n];\n    \n\n    \n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1629, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { users } from '@/lib/constants';\nimport { useToast } from '@/hooks/use-toast';\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const router = useRouter();\n  const { toast } = useToast();\n\n  const handleLogin = (e: React.FormEvent) => {\n    e.preventDefault();\n    const user = users.find((u) => u.email.toLowerCase() === email.toLowerCase());\n\n    if (user && user.password === password) {\n      router.push(`/${user.role}`);\n    } else {\n      toast({\n        variant: \"destructive\",\n        title: \"Login Failed\",\n        description: \"Invalid email or password. Please try again.\",\n      });\n    }\n  };\n\n  return (\n    <div className=\"relative flex flex-col items-center justify-center min-h-screen bg-background p-4 overflow-hidden\">\n       <div className=\"absolute inset-0 z-0\">\n        <div className=\"absolute bottom-0 left-[-20%] right-0 top-[-10%] h-[500px] w-[500px] rounded-full bg-[radial-gradient(circle_farthest-side,rgba(var(--primary-rgb),0.15),rgba(255,255,255,0))]\"></div>\n        <div className=\"absolute bottom-[-20%] right-[-20%] h-[500px] w-[500px] rounded-full bg-[radial-gradient(circle_farthest-side,rgba(var(--primary-rgb),0.15),rgba(255,255,255,0))]\"></div>\n       </div>\n\n      <div className=\"z-10 text-center mb-8 md:mb-12\">\n        <h1 className=\"font-headline text-4xl md:text-5xl font-bold text-foreground animate-fade-in-up\">\n          Welcome to <span className=\"text-primary-foreground bg-primary/90 px-2 rounded-md\">Careflux</span>\n        </h1>\n        <p className=\"text-muted-foreground mt-4 text-base md:text-lg animate-fade-in-up [animation-delay:0.2s]\">Your integrated hospital management solution.</p>\n      </div>\n      <Card className=\"w-full max-w-sm animate-fade-in-up [animation-delay:0.4s]\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl\">Login</CardTitle>\n          <CardDescription>\n            Enter your email and password below to login to your account.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleLogin}>\n            <div className=\"grid gap-4\">\n              <div className=\"grid gap-2 animate-fade-in-up [animation-delay:0.5s]\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input id=\"email\" type=\"email\" placeholder=\"m@example.com\" required value={email} onChange={(e) => setEmail(e.target.value)} />\n              </div>\n              <div className=\"grid gap-2 animate-fade-in-up [animation-delay:0.6s]\">\n                <Label htmlFor=\"password\">Password</Label>\n                <Input id=\"password\" type=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)} />\n              </div>\n              <Button type=\"submit\" className=\"w-full animate-fade-in-up [animation-delay:0.7s]\">\n                Login\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n      <footer className=\"z-10 mt-12 text-center text-sm text-muted-foreground animate-fade-in [animation-delay:0.8s]\">\n        <p>Powered by DevFlux 2025</p>\n      </footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;;AAWe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,cAAc,CAAC;QACnB,EAAE,cAAc;QAChB,MAAM,OAAO,uHAAA,CAAA,QAAK,CAAC,IAAI,CAAC,CAAC,IAAM,EAAE,KAAK,CAAC,WAAW,OAAO,MAAM,WAAW;QAE1E,IAAI,QAAQ,KAAK,QAAQ,KAAK,UAAU;YACtC,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,EAAE;QAC7B,OAAO;YACL,MAAM;gBACJ,SAAS;gBACT,OAAO;gBACP,aAAa;YACf;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACZ,8OAAC;gBAAI,WAAU;;kCACd,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;;;;;;;0BAGjB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;;4BAAkF;0CACnF,8OAAC;gCAAK,WAAU;0CAAwD;;;;;;;;;;;;kCAErF,8OAAC;wBAAE,WAAU;kCAA4F;;;;;;;;;;;;0BAE3G,8OAAC,gIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,8OAAC,gIAAA,CAAA,aAAU;;0CACT,8OAAC,gIAAA,CAAA,YAAS;gCAAC,WAAU;0CAAW;;;;;;0CAChC,8OAAC,gIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAInB,8OAAC,gIAAA,CAAA,cAAW;kCACV,cAAA,8OAAC;4BAAK,UAAU;sCACd,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;0DAAQ;;;;;;0DACvB,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAQ,MAAK;gDAAQ,aAAY;gDAAgB,QAAQ;gDAAC,OAAO;gDAAO,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;kDAE5H,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;0DAAW;;;;;;0DAC1B,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAW,MAAK;gDAAW,QAAQ;gDAAC,OAAO;gDAAU,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;kDAE5G,8OAAC,kIAAA,CAAA,SAAM;wCAAC,MAAK;wCAAS,WAAU;kDAAmD;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAO3F,8OAAC;gBAAO,WAAU;0BAChB,cAAA,8OAAC;8BAAE;;;;;;;;;;;;;;;;;AAIX","debugId":null}}]
}