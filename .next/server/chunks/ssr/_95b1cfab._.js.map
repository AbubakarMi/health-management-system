{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/constants.ts"],"sourcesContent":["\n\nimport { \n    LayoutDashboard, \n    Users, \n    FlaskConical, \n    CircleDollarSign, \n    Pill, \n    HeartPulse,\n    UserCog,\n    BarChart3,\n    Droplets,\n    Boxes,\n    MessageSquare,\n    Banknote,\n    FileText,\n    LucideIcon\n} from \"lucide-react\";\n\nexport const roles = [\"admin\", \"doctor\", \"pharmacist\", \"finance\", \"labtech\"] as const;\nexport type Role = (typeof roles)[number];\n\nexport const roleNames: Record<Role, string> = {\n    admin: \"Admin\",\n    doctor: \"Doctor\",\n    pharmacist: \"Pharmacist\",\n    finance: \"Finance\",\n    labtech: \"Lab Tech\",\n};\n\nexport type User = {\n  name: string;\n  email: string;\n  role: Role;\n  password?: string;\n}\n\nexport const users: User[] = [\n  { name: 'Dr. Evelyn Reed', email: 'doctor@gmail.com', role: 'doctor', password: 'password123' },\n  { name: 'Mark Chen', email: 'pharmacist@gmail.com', role: 'pharmacist', password: 'password123' },\n  { name: 'Angela Rodriguez', email: 'finance@gmail.com', role: 'finance', password: 'password123' },\n  { name: 'Ben Carter', email: 'labtech@gmail.com', role: 'labtech', password: 'password123' },\n  { name: 'Olivia Martinez', email: 'admin@gmail.com', role: 'admin', password: 'password123' },\n];\n\nexport type Message = {\n    id: string;\n    from: string; // Can be a name or role\n    to: Role;\n    content: string;\n    timestamp: string;\n    read: boolean;\n};\n\nconst initialMessages: Message[] = [\n    { \n        id: 'msg-1', \n        from: 'Mark Chen', \n        to: 'admin', \n        content: 'We are running critically low on Paracetamol. Please order a new shipment as soon as possible.',\n        timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(), // 2 hours ago\n        read: false \n    },\n    { \n        id: 'msg-2', \n        from: 'Olivia Martinez', \n        to: 'pharmacist', \n        content: 'Acknowledged. I will place the order for Paracetamol immediately.',\n        timestamp: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString(), // 1 hour ago\n        read: true\n    },\n    { \n        id: 'msg-3', \n        from: 'Dr. Evelyn Reed', \n        to: 'admin', \n        content: 'The new ECG machine in room 304 is malfunctioning. Please have it looked at.',\n        timestamp: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(), // 1 day ago\n        read: true \n    }\n];\n\nclass MessageManager {\n    private messages: Message[];\n    private subscribers: Function[] = [];\n\n    constructor(initialMessages: Message[]) {\n        this.messages = initialMessages.sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n    }\n    \n    getConversations(role: Role) {\n        const conversations: Record<string, Message[]> = {};\n        this.messages.forEach(msg => {\n            if (msg.to === role) {\n                if (!conversations[msg.from]) conversations[msg.from] = [];\n                conversations[msg.from].push(msg);\n            } else if (users.find(u => u.name === msg.from)?.role === role) {\n                const recipientUser = users.find(u => u.role === msg.to);\n                if (recipientUser) {\n                    if (!conversations[recipientUser.name]) conversations[recipientUser.name] = [];\n                    conversations[recipientUser.name].push(msg);\n                }\n            }\n        });\n        \n        // Return a list of conversations, with the most recent first\n        return Object.entries(conversations).map(([participant, messages]) => ({\n            participant,\n            messages,\n            lastMessage: messages[messages.length - 1],\n            unreadCount: messages.filter(m => m.to === role && !m.read).length\n        })).sort((a,b) => new Date(b.lastMessage.timestamp).getTime() - new Date(a.lastMessage.timestamp).getTime());\n    }\n\n    getMessages() {\n        return this.messages;\n    }\n\n    sendMessage({ from, to, content }: { from: string, to: Role, content: string }) {\n        const newMessage: Message = {\n            id: `msg-${Date.now()}`,\n            from,\n            to,\n            content,\n            timestamp: new Date().toISOString(),\n            read: false,\n        };\n        this.messages.push(newMessage);\n        this.notify();\n    }\n\n    markAsRead(participantName: string, role: Role) {\n        this.messages.forEach(msg => {\n            if (msg.from === participantName && msg.to === role && !msg.read) {\n                msg.read = true;\n            }\n        });\n        this.notify();\n    }\n\n    subscribe(callback: Function) {\n        this.subscribers.push(callback);\n        return () => {\n            this.subscribers = this.subscribers.filter(sub => sub !== callback);\n        };\n    }\n\n    private notify() {\n        this.subscribers.forEach(callback => callback(this.messages));\n    }\n}\n\nexport const messageManager = new MessageManager(initialMessages);\n\n\nexport type Prescription = {\n  id: string;\n  patientName: string;\n  medicine: string;\n  dosage: string;\n  doctor: string;\n  status: \"Pending\" | \"Filled\" | \"Unavailable\";\n  price: number;\n  invoiced: boolean;\n};\n\nexport type MedicalHistoryEntry = {\n    date: string;\n    event: string;\n    details: string;\n    doctor: string;\n};\n\nexport type BloodType = 'A+' | 'A-' | 'B+' | 'B-' | 'AB+' | 'AB-' | 'O+' | 'O-';\n\nexport type Patient = {\n  id: string;\n  name: string;\n  condition: string;\n  lastVisit: string;\n  bloodType: BloodType;\n  medicalHistory: MedicalHistoryEntry[];\n  prescriptions: Prescription[];\n  labTests: LabTest[];\n};\n\n\nconst initialPrescriptions: Prescription[] = [\n    { id: 'presc-001', patientName: 'John Doe', medicine: 'Lisinopril', dosage: '10mg', doctor: 'Dr. Evelyn Reed', status: 'Pending', price: 25.50, invoiced: false },\n    { id: 'presc-002', patientName: 'Jane Smith', medicine: 'Metformin', dosage: '500mg', doctor: 'Dr. Evelyn Reed', status: 'Filled', price: 30.00, invoiced: true },\n    { id: 'presc-003', patientName: 'Bob Johnson', medicine: 'Amoxicillin', dosage: '250mg', doctor: 'Dr. Evelyn Reed', status: 'Pending', price: 15.75, invoiced: false },\n    { id: 'presc-004', patientName: 'Alice Williams', medicine: 'Ibuprofen', dosage: '200mg', doctor: 'Dr. Evelyn Reed', status: 'Unavailable', price: 10.00, invoiced: true },\n];\n\nexport type LabTest = {\n    id: string;\n    patient: string;\n    test: string;\n    instructions: string;\n    collected: string;\n    status: 'Pending' | 'Processing' | 'Completed';\n    results?: string;\n    price: number;\n    invoiced: boolean;\n}\n\nconst initialLabTests: LabTest[] = [\n    { id: 'lab-001', patient: 'Michael Brown', test: 'Complete Blood Count', instructions: 'Standard CBC panel.', collected: '2024-05-12 09:00', status: 'Pending', price: 75.00, invoiced: false },\n    { id: 'lab-002', patient: 'Emily Davis', test: 'Lipid Panel', instructions: 'Fasting required for 12 hours prior.', collected: '2024-05-12 09:30', status: 'Completed', results: 'Total Cholesterol: 210 mg/dL, HDL: 55 mg/dL, LDL: 130 mg/dL', price: 120.00, invoiced: true },\n    { id: 'lab-003', patient: 'Chris Wilson', test: 'Basic Metabolic Panel', instructions: 'Standard BMP.', collected: '2024-05-12 10:00', status: 'Processing', price: 95.00, invoiced: false },\n    { id: 'lab-004', patient: 'Sarah Miller', test: 'Urinalysis', instructions: 'Clean catch midstream sample.', collected: '2024-05-12 10:15', status: 'Pending', price: 45.00, invoiced: false },\n    { id: 'lab-005', patient: 'John Doe', test: 'Thyroid Panel', instructions: 'TSH and T4 test.', collected: '2024-05-13 08:30', status: 'Pending', price: 110.00, invoiced: false },\n    { id: 'lab-006', patient: 'Jane Smith', test: 'Cardiac Enzymes', instructions: 'Troponin I test.', collected: '2024-05-13 08:45', status: 'Processing', price: 250.00, invoiced: false },\n];\n\nexport const detailedPatients: Patient[] = [\n  { \n    id: 'p-001',\n    name: 'John Doe', \n    condition: 'Stable', \n    lastVisit: '2024-05-10',\n    bloodType: 'O+',\n    medicalHistory: [\n        { date: '2024-05-10', event: 'Check-up', details: 'Routine check-up, vitals are normal.', doctor: 'Dr. Evelyn Reed' },\n        { date: '2024-03-15', event: 'Diagnosis', details: 'Diagnosed with Hypertension.', doctor: 'Dr. Evelyn Reed' }\n    ],\n    prescriptions: initialPrescriptions.filter(p => p.patientName === 'John Doe'),\n    labTests: initialLabTests.filter(t => t.patient === 'John Doe')\n  },\n  { \n    id: 'p-002',\n    name: 'Jane Smith', \n    condition: 'Critical', \n    lastVisit: '2024-05-12',\n    bloodType: 'A-',\n    medicalHistory: [\n        { date: '2024-05-12', event: 'Emergency Admission', details: 'Admitted for severe chest pain.', doctor: 'Dr. Evelyn Reed' },\n        { date: '2023-11-20', event: 'Diagnosis', details: 'Diagnosed with Type 2 Diabetes.', doctor: 'Dr. Evelyn Reed' }\n    ],\n    prescriptions: initialPrescriptions.filter(p => p.patientName === 'Jane Smith'),\n    labTests: initialLabTests.filter(t => t.patient === 'Jane Smith')\n  },\n  { \n    id: 'p-003',\n    name: 'Bob Johnson', \n    condition: 'Improving', \n    lastVisit: '2024-05-09',\n    bloodType: 'B+',\n    medicalHistory: [\n        { date: '2024-05-09', event: 'Follow-up', details: 'Follow-up for bacterial infection. Responding well to antibiotics.', doctor: 'Dr. Evelyn Reed' },\n    ],\n    prescriptions: initialPrescriptions.filter(p => p.patientName === 'Bob Johnson'),\n    labTests: initialLabTests.filter(t => t.patient === 'Bob Johnson')\n  },\n  { \n    id: 'p-004',\n    name: 'Alice Williams', \n    condition: 'Stable', \n    lastVisit: '2024-05-11',\n    bloodType: 'AB+',\n     medicalHistory: [\n        { date: '2024-05-11', event: 'Check-up', details: 'Complaining of seasonal allergies.', doctor: 'Dr. Evelyn Reed' },\n    ],\n    prescriptions: initialPrescriptions.filter(p => p.patientName === 'Alice Williams'),\n    labTests: initialLabTests.filter(t => t.patient === 'Alice Williams')\n  },\n];\n\n\nexport const navLinks: Record<Role, { href: string; label: string; icon: LucideIcon }[]> = {\n    admin: [\n        { href: \"/admin\", label: \"Dashboard\", icon: LayoutDashboard },\n        { href: \"/admin/patients\", label: \"Patients\", icon: Users },\n        { href: \"/admin/staff\", label: \"Staff\", icon: UserCog },\n        { href: \"/admin/pharmacy\", label: \"Pharmacy\", icon: Pill },\n        { href: \"/admin/lab\", label: \"Lab\", icon: FlaskConical },\n        { href: \"/admin/billing\", label: \"Billing\", icon: CircleDollarSign },\n        { href: \"/admin/messages\", label: \"Messages\", icon: MessageSquare },\n        { href: \"/admin/reports\", label: \"Reports\", icon: BarChart3 },\n    ],\n    doctor: [\n        { href: \"/doctor\", label: \"Dashboard\", icon: LayoutDashboard },\n        { href: \"/doctor/patients\", label: \"Patients\", icon: Users },\n        { href: \"/doctor/risk-assessment\", label: \"Risk Assessment\", icon: HeartPulse },\n    ],\n    pharmacist: [\n        { href: \"/pharmacist\", label: \"Dashboard\", icon: LayoutDashboard },\n        { href: \"/pharmacist/inventory\", label: \"Inventory\", icon: Boxes },\n        { href: \"/pharmacist/prescriptions\", label: \"Prescriptions\", icon: MessageSquare },\n        { href: \"/pharmacist/requests\", label: \"Requests\", icon: MessageSquare },\n    ],\n    finance: [\n        { href: \"/finance\", label: \"Dashboard\", icon: LayoutDashboard },\n        { href: \"/finance/invoices\", label: \"Manage Invoices\", icon: FileText },\n    ],\n    labtech: [\n        { href: \"/labtech\", label: \"Dashboard\", icon: LayoutDashboard },\n        { href: \"/labtech/tests\", label: \"Patient Tests\", icon: Users },\n        { href: \"/labtech/blood-bank\", label: \"Blood Bank\", icon: Droplets },\n    ],\n};\n\n// Global state for prescriptions\nclass PrescriptionManager {\n  private prescriptions: Prescription[];\n  private subscribers: Function[] = [];\n\n  constructor(initialPrescriptions: Prescription[]) {\n    this.prescriptions = initialPrescriptions;\n  }\n\n  getPrescriptions() {\n    return this.prescriptions;\n  }\n  \n  getPatientPrescriptions(patientId: string) {\n    const patient = detailedPatients.find(p => p.id === patientId);\n    if (!patient) return [];\n    \n    // This is a simplified way to link prescriptions. In a real app, this would be a DB relation.\n    return this.prescriptions.filter(p => p.patientName === patient.name);\n  }\n  \n  updatePrescription(updatedPrescription: Prescription) {\n    const index = this.prescriptions.findIndex(p => p.id === updatedPrescription.id);\n    if (index !== -1) {\n        this.prescriptions[index] = updatedPrescription;\n        \n        const patient = detailedPatients.find(p => p.name === updatedPrescription.patientName);\n        if (patient) {\n            const patientPrescriptionIndex = patient.prescriptions.findIndex(p => p.id === updatedPrescription.id);\n            if(patientPrescriptionIndex !== -1) {\n                patient.prescriptions[patientPrescriptionIndex] = updatedPrescription;\n            }\n        }\n        this.notify();\n    }\n  }\n\n  updatePrescriptionStatus(id: string, status: Prescription['status']) {\n    const index = this.prescriptions.findIndex(p => p.id === id);\n    if (index !== -1) {\n      this.prescriptions[index].status = status;\n      this.notify();\n    }\n  }\n  \n  addPrescription(prescription: Omit<Prescription, 'id' | 'price' | 'invoiced'>) {\n    const newPrescription: Prescription = {\n        ...prescription,\n        id: `presc-${Date.now()}`,\n        price: Math.floor(Math.random() * 50) + 10, // Mock price\n        invoiced: false\n    };\n    this.prescriptions.unshift(newPrescription);\n    \n    const patient = detailedPatients.find(p => p.name === newPrescription.patientName);\n    patient?.prescriptions.unshift(newPrescription);\n    \n    this.notify();\n  }\n\n  deletePrescription(patientId: string, prescriptionId: string) {\n      this.prescriptions = this.prescriptions.filter(p => p.id !== prescriptionId);\n      const patient = detailedPatients.find(p => p.id === patientId);\n      if (patient) {\n          patient.prescriptions = patient.prescriptions.filter(p => p.id !== prescriptionId);\n      }\n      this.notify();\n  }\n\n  subscribe(callback: Function) {\n    this.subscribers.push(callback);\n    return () => {\n      this.subscribers = this.subscribers.filter(sub => sub !== callback);\n    };\n  }\n\n  private notify() {\n    this.subscribers.forEach(callback => callback(this.prescriptions));\n  }\n}\n\nexport const prescriptionManager = new PrescriptionManager(initialPrescriptions);\n\n\nexport const mockFinancialData = [\n  { name: 'Jan', revenue: 4000, expenses: 2400 },\n  { name: 'Feb', revenue: 3000, expenses: 1398 },\n  { name: 'Mar', revenue: 2000, expenses: 9800 },\n  { name: 'Apr', revenue: 2780, expenses: 3908 },\n  { name: 'May', revenue: 1890, expenses: 4800 },\n  { name: 'Jun', revenue: 2390, expenses: 3800 },\n];\n\nexport type Medication = {\n    id: string;\n    name: string;\n    available: number;\n    lowStock: number;\n    price: number;\n}\n\nconst initialMedications: Medication[] = [\n  { id: 'med-001', name: 'Paracetamol', available: 150, lowStock: 50, price: 5.00 },\n  { id: 'med-002', name: 'Ibuprofen', available: 80, lowStock: 20, price: 7.50 },\n  { id: 'med-003', name: 'Amoxicillin', available: 45, lowStock: 30, price: 12.25 },\n  { id: 'med-004', name: 'Lisinopril', available: 120, lowStock: 40, price: 25.50 },\n  { id: 'med-005', name: 'Metformin', available: 200, lowStock: 60, price: 30.00 },\n];\n\nclass MedicationManager {\n    private medications: Medication[];\n    private subscribers: Function[] = [];\n\n    constructor(initialMedications: Medication[]) {\n        this.medications = initialMedications;\n    }\n\n    getMedications() {\n        return this.medications;\n    }\n\n    addMedication(medication: Omit<Medication, 'id' | 'price'>) {\n        const newMedication: Medication = {\n            ...medication,\n            id: `med-${Date.now()}`,\n            price: Math.floor(Math.random() * 20) + 5, // Mock price\n        };\n        this.medications.push(newMedication);\n        this.notify();\n    }\n\n    subscribe(callback: (medications: Medication[]) => void) {\n        this.subscribers.push(callback);\n        return () => {\n            this.subscribers = this.subscribers.filter(sub => sub !== callback);\n        };\n    }\n\n    private notify() {\n        this.subscribers.forEach(callback => callback(this.medications));\n    }\n}\nexport const medicationManager = new MedicationManager(initialMedications);\n\nclass LabTestManager {\n    private labTests: LabTest[];\n    private subscribers: Function[] = [];\n\n    constructor(initialTests: LabTest[]) {\n        this.labTests = initialTests;\n    }\n\n    getLabTests() {\n        return this.labTests;\n    }\n\n    addLabTest(testRequest: Omit<LabTest, 'id' | 'price' | 'invoiced' | 'collected' | 'status'> & { doctor: string }) {\n        const newTest: LabTest = {\n            ...testRequest,\n            id: `lab-${Date.now()}`,\n            collected: new Date().toISOString().split('T')[0],\n            status: 'Pending',\n            price: Math.floor(Math.random() * 100) + 50, // Mock price\n            invoiced: false,\n        };\n        this.labTests.unshift(newTest);\n        \n        const patient = detailedPatients.find(p => p.name === newTest.patient);\n        patient?.labTests.unshift(newTest);\n        \n        // Also add to patient's medical history\n        patient?.medicalHistory.unshift({\n            date: newTest.collected,\n            event: `Lab Test Ordered: ${newTest.test}`,\n            details: `Instructions: ${newTest.instructions}`,\n            doctor: testRequest.doctor\n        });\n\n        this.notify();\n    }\n\n    updateLabTest(testId: string, status: LabTest['status'], results?: string) {\n        const testIndex = this.labTests.findIndex(t => t.id === testId);\n        if (testIndex !== -1) {\n            this.labTests[testIndex].status = status;\n            if (results) {\n                this.labTests[testIndex].results = results;\n            }\n\n            // If completed, add results to medical history\n            if (status === 'Completed') {\n                const test = this.labTests[testIndex];\n                const patient = detailedPatients.find(p => p.name === test.patient);\n                patient?.medicalHistory.unshift({\n                    date: new Date().toISOString().split('T')[0],\n                    event: `Lab Test Results: ${test.test}`,\n                    details: `Results: ${results}`,\n                    doctor: 'Lab'\n                });\n            }\n            this.notify();\n        }\n    }\n\n    subscribe(callback: (tests: LabTest[]) => void) {\n        this.subscribers.push(callback);\n        return () => {\n            this.subscribers = this.subscribers.filter(sub => sub !== callback);\n        };\n    }\n\n    private notify() {\n        this.subscribers.forEach(callback => callback(this.labTests));\n    }\n}\n\nexport const labTestManager = new LabTestManager(initialLabTests);\n\n\nexport const mockLabVisitsData = [\n  { month: 'Jan', visits: 250 },\n  { month: 'Feb', visits: 310 },\n  { month: 'Mar', visits: 280 },\n  { month: 'Apr', visits: 350 },\n  { month: 'May', visits: 400 },\n  { month: 'Jun', visits: 380 },\n];\n\nexport const mockDoctorAdmissionsData = [\n    { doctor: 'Dr. Smith', admissions: 25 },\n    { doctor: 'Dr. Jones', admissions: 32 },\n    { doctor: 'Dr. Chen', admissions: 18 },\n    { doctor: 'Dr. Patel', admissions: 45 },\n    { doctor: 'Dr. Garcia', admissions: 29 },\n];\n\n\nexport type InvoiceItem = {\n    id: string; // prescription or lab test id\n    name: string;\n    type: 'Prescription' | 'Lab Test';\n    price: number;\n}\n\nexport type Invoice = {\n    id: string;\n    patientName: string;\n    amount: number;\n    dueDate: string;\n    status: 'Paid' | 'Pending' | 'Overdue';\n    items: InvoiceItem[];\n}\n\nexport const initialInvoices: Invoice[] = [\n    { \n        id: 'INV-001', \n        patientName: 'John Doe', \n        amount: 250.00, \n        dueDate: '2024-05-20', \n        status: 'Paid',\n        items: [\n            { id: 'presc-001', name: 'Lisinopril', type: 'Prescription', price: 25.50 },\n            { id: 'lab-005', name: 'Thyroid Panel', type: 'Lab Test', price: 110.00 }\n        ]\n    },\n    { id: 'INV-002', patientName: 'Jane Smith', amount: 150.75, dueDate: '2024-06-01', status: 'Pending', items: [] },\n    { id: 'INV-003', patientName: 'Bob Johnson', amount: 45.50, dueDate: '2024-04-30', status: 'Paid', items: [] },\n    { id: 'INV-004', patientName: 'Alice Williams', amount: 800.00, dueDate: '2024-05-01', status: 'Overdue', items: [] },\n    { id: 'INV-005', patientName: 'Michael Brown', amount: 320.00, dueDate: '2024-06-15', status: 'Pending', items: [] },\n];\n\nexport type BloodUnit = {\n    bloodType: BloodType;\n    quantity: number; // in units\n};\n\nexport const bloodBankInventory: BloodUnit[] = [\n    { bloodType: 'A+', quantity: 20 },\n    { bloodType: 'A-', quantity: 15 },\n    { bloodType: 'B+', quantity: 18 },\n    { bloodType: 'B-', quantity: 10 },\n    { bloodType: 'AB+', quantity: 8 },\n    { bloodType: 'AB-', quantity: 5 },\n    { bloodType: 'O+', quantity: 30 },\n    { bloodType: 'O-', quantity: 25 },\n];\n\n    \n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1096, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1156, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/doctor/page.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { detailedPatients } from \"@/lib/constants\";\nimport { Button } from \"@/components/ui/button\";\nimport Link from \"next/link\";\nimport { ArrowRight } from \"lucide-react\";\n\nconst appointments = [\n    { patient: 'Michael Brown', time: '10:00 AM', reason: 'Follow-up' },\n    { patient: 'Emily Davis', time: '11:30 AM', reason: 'New Consultation' },\n    { patient: 'Chris Wilson', time: '02:00 PM', reason: 'Routine Checkup' },\n];\n\nexport default function DoctorDashboard() {\n  const myPatients = detailedPatients.slice(0, 4); // Show first 4 for dashboard\n\n  return (\n    <div className=\"grid gap-6 md:grid-cols-1 lg:grid-cols-2\">\n      <Card>\n        <CardHeader>\n          <CardTitle>My Patients</CardTitle>\n          <CardDescription>A list of your currently admitted patients.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Name</TableHead>\n                <TableHead>Condition</TableHead>\n                <TableHead><span className=\"sr-only\">Actions</span></TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {myPatients.map((patient) => (\n                <TableRow key={patient.name}>\n                  <TableCell className=\"font-medium flex items-center gap-3\">\n                    <Avatar>\n                      <AvatarImage src={`https://placehold.co/40x40.png?text=${patient.name.charAt(0)}`} alt={patient.name} data-ai-hint=\"person\" />\n                      <AvatarFallback>{patient.name.charAt(0)}</AvatarFallback>\n                    </Avatar>\n                    {patient.name}\n                  </TableCell>\n                  <TableCell>\n                    <Badge variant={patient.condition === 'Critical' ? 'destructive' : 'secondary'}>{patient.condition}</Badge>\n                  </TableCell>\n                  <TableCell className=\"text-right\">\n                    <Button asChild variant=\"outline\" size=\"sm\">\n                       <Link href={`/doctor/patients/${patient.id}`}>\n                          View\n                          <ArrowRight className=\"ml-2 h-4 w-4\" />\n                       </Link>\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n      <Card>\n        <CardHeader>\n          <CardTitle>Today's Appointments</CardTitle>\n           <CardDescription>Your schedule for today.</CardDescription>\n        </CardHeader>\n        <CardContent>\n           <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Patient</TableHead>\n                <TableHead>Time</TableHead>\n                <TableHead>Reason</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {appointments.map((appt) => (\n                <TableRow key={appt.patient}>\n                  <TableCell className=\"font-medium\">{appt.patient}</TableCell>\n                  <TableCell>{appt.time}</TableCell>\n                  <TableCell>{appt.reason}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}