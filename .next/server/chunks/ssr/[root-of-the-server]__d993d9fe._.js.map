{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\r\nimport {googleAI} from '@genkit-ai/googleai';\r\n\r\nexport const ai = genkit({\r\n  plugins: [googleAI()],\r\n  model: 'googleai/gemini-2.0-flash',\r\n});\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/ai/flows/health-risk-assessment.ts"],"sourcesContent":["\r\n'use server';\r\n\r\n/**\r\n * @fileOverview A health risk assessment AI agent.\r\n *\r\n * - assessHealthRisk - A function that handles the health risk assessment process.\r\n * - AssessHealthRiskInput - The input type for the assessHealthRisk function.\r\n * - AssessHealthRiskOutput - The return type for the assessHealthRisk function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst AssessHealthRiskInputSchema = z.object({\r\n  medicalHistory: z\r\n    .string()\r\n    .describe('The medical history of the patient.'),\r\n  lifestyleFactors: z\r\n    .string()\r\n    .describe('The lifestyle factors of the patient, such as diet and exercise.'),\r\n  familyHistory: z\r\n    .string()\r\n    .describe('The family history of the patient.'),\r\n});\r\nexport type AssessHealthRiskInput = z.infer<typeof AssessHealthRiskInputSchema>;\r\n\r\nconst AssessHealthRiskOutputSchema = z.object({\r\n  riskLevel: z.enum(['low', 'medium', 'high']).describe('The risk level of the patient.'),\r\n  riskFactors: z.string().describe('The risk factors of the patient.'),\r\n  recommendations: z.string().describe('The lifestyle and preventative recommendations for the patient.'),\r\n  treatmentSuggestion: z.string().describe('Specific treatment plans or medications that could be considered for the identified risks.'),\r\n});\r\nexport type AssessHealthRiskOutput = z.infer<typeof AssessHealthRiskOutputSchema>;\r\n\r\nexport async function assessHealthRisk(input: AssessHealthRiskInput): Promise<AssessHealthRiskOutput> {\r\n  return assessHealthRiskFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'assessHealthRiskPrompt',\r\n  input: {schema: AssessHealthRiskInputSchema},\r\n  output: {schema: AssessHealthRiskOutputSchema},\r\n  prompt: `You are an AI health risk assessment tool for medical professionals.\r\n\r\nYou will use the following information to assess the patient's health risk.\r\n\r\nMedical History: {{{medicalHistory}}}\r\nLifestyle Factors: {{{lifestyleFactors}}}\r\nFamily History: {{{familyHistory}}}\r\n\r\nYou will make a determination as to the patient's risk level (low, medium, or high), and what the risk factors are, and set the riskLevel and riskFactors output fields appropriately.\r\n\r\nYou will also provide lifestyle and preventative recommendations for the patient.\r\n\r\nFinally, based on the assessment, provide a suggestion for a potential treatment plan or specific medications that a doctor might consider.\r\n`,\r\n});\r\n\r\nconst assessHealthRiskFlow = ai.defineFlow(\r\n  {\r\n    name: 'assessHealthRiskFlow',\r\n    inputSchema: AssessHealthRiskInputSchema,\r\n    outputSchema: AssessHealthRiskOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;AAGA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,8BAA8B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,gBAAgB,uIAAA,CAAA,IAAC,CACd,MAAM,GACN,QAAQ,CAAC;IACZ,kBAAkB,uIAAA,CAAA,IAAC,CAChB,MAAM,GACN,QAAQ,CAAC;IACZ,eAAe,uIAAA,CAAA,IAAC,CACb,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,WAAW,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAO;QAAU;KAAO,EAAE,QAAQ,CAAC;IACtD,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACrC,qBAAqB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC3C;AAGO,eAAe,iBAAiB,KAA4B;IACjE,OAAO,qBAAqB;AAC9B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA2B;IAC3C,QAAQ;QAAC,QAAQ;IAA4B;IAC7C,QAAQ,CAAC;;;;;;;;;;;;;AAaX,CAAC;AACD;AAEA,MAAM,uBAAuB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACxC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAjCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/.next-internal/server/app/doctor/risk-assessment/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {assessHealthRisk as '408e1c90a32cf82489f8737cf674ffbb07d85377be'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/components/health-risk-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const HealthRiskForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call HealthRiskForm() from the server but HealthRiskForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/health-risk-form.tsx <module evaluation>\",\n    \"HealthRiskForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,qEACA","debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/components/health-risk-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const HealthRiskForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call HealthRiskForm() from the server but HealthRiskForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/health-risk-form.tsx\",\n    \"HealthRiskForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,iDACA","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 500, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Documents/DevFlux/health-management-system/src/app/doctor/risk-assessment/page.tsx"],"sourcesContent":["import { HealthRiskForm } from \"@/components/health-risk-form\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { HeartPulse } from \"lucide-react\";\r\n\r\nexport default function RiskAssessmentPage() {\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto\">\r\n        <Card>\r\n            <CardHeader className=\"text-center\">\r\n                <div className=\"flex justify-center items-center mb-4\">\r\n                    <HeartPulse className=\"w-12 h-12 text-primary\"/>\r\n                </div>\r\n                <CardTitle className=\"font-headline text-3xl\">AI Health Risk Assessment</CardTitle>\r\n                <CardDescription>\r\n                    Enter patient information to get an AI-powered health risk assessment. This tool provides a simulated analysis based on the provided data.\r\n                </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <HealthRiskForm />\r\n            </CardContent>\r\n        </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC,gIAAA,CAAA,OAAI;;8BACD,8OAAC,gIAAA,CAAA,aAAU;oBAAC,WAAU;;sCAClB,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,kNAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;;;;;;sCAE1B,8OAAC,gIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAyB;;;;;;sCAC9C,8OAAC,gIAAA,CAAA,kBAAe;sCAAC;;;;;;;;;;;;8BAIrB,8OAAC,gIAAA,CAAA,cAAW;8BACR,cAAA,8OAAC,4IAAA,CAAA,iBAAc;;;;;;;;;;;;;;;;;;;;;AAK/B","debugId":null}}]
}