{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 707, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root> & {\n    viewportRef?: React.Ref<HTMLDivElement>\n  }\n>(({ className, children, viewportRef, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport\n      ref={viewportRef}\n      className=\"h-full w-full rounded-[inherit]\"\n    >\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAKhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,OAAO,EAAE,oBACjD,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAC3B,KAAK;gBACL,WAAU;0BAET;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 776, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 817, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker, DropdownProps } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./select\"\nimport { ScrollArea } from \"./scroll-area\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        caption_dropdowns: \"flex gap-2\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        Dropdown: ({ value, onChange, children, ...props }: DropdownProps) => {\n          const options = React.Children.toArray(\n            children\n          ) as React.ReactElement<React.HTMLProps<HTMLOptionElement>>[]\n          const selected = options.find((child) => child.props.value === value)\n          const handleChange = (value: string) => {\n            const changeEvent = {\n              target: { value },\n            } as React.ChangeEvent<HTMLSelectElement>\n            onChange?.(changeEvent)\n          }\n          return (\n            <Select\n              value={value?.toString()}\n              onValueChange={(value) => {\n                handleChange(value)\n              }}\n            >\n              <SelectTrigger className=\"pr-1.5 focus:ring-0\">\n                <SelectValue>{selected?.props?.children}</SelectValue>\n              </SelectTrigger>\n              <SelectContent position=\"popper\">\n                <ScrollArea className=\"h-80\">\n                  {options.map((option, id: number) => (\n                    <SelectItem\n                      key={`${option.props.value}-${id}`}\n                      value={option.props.value?.toString() ?? \"\"}\n                    >\n                      {option.props.children}\n                    </SelectItem>\n                  ))}\n                </ScrollArea>\n              </SelectContent>\n            </Select>\n          )\n        },\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AATA;;;;;;;;;AAaA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,8OAAC,8JAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,mBAAmB;YACnB,KAAK;YACL,YAAY,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE9D,UAAU,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,OAAsB;gBAC/D,MAAM,UAAU,qMAAA,CAAA,WAAc,CAAC,OAAO,CACpC;gBAEF,MAAM,WAAW,QAAQ,IAAI,CAAC,CAAC,QAAU,MAAM,KAAK,CAAC,KAAK,KAAK;gBAC/D,MAAM,eAAe,CAAC;oBACpB,MAAM,cAAc;wBAClB,QAAQ;4BAAE;wBAAM;oBAClB;oBACA,WAAW;gBACb;gBACA,qBACE,8OAAC,kIAAA,CAAA,SAAM;oBACL,OAAO,OAAO;oBACd,eAAe,CAAC;wBACd,aAAa;oBACf;;sCAEA,8OAAC,kIAAA,CAAA,gBAAa;4BAAC,WAAU;sCACvB,cAAA,8OAAC,kIAAA,CAAA,cAAW;0CAAE,UAAU,OAAO;;;;;;;;;;;sCAEjC,8OAAC,kIAAA,CAAA,gBAAa;4BAAC,UAAS;sCACtB,cAAA,8OAAC,0IAAA,CAAA,aAAU;gCAAC,WAAU;0CACnB,QAAQ,GAAG,CAAC,CAAC,QAAQ,mBACpB,8OAAC,kIAAA,CAAA,aAAU;wCAET,OAAO,OAAO,KAAK,CAAC,KAAK,EAAE,cAAc;kDAExC,OAAO,KAAK,CAAC,QAAQ;uCAHjB,GAAG,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI;;;;;;;;;;;;;;;;;;;;;YAUhD;QACF;QACC,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 964, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["\nimport * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n\n    "],"names":[],"mappings":";;;;AACA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 992, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/create-patient-dialog.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter, DialogDescription } from \"@/components/ui/dialog\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Patient, users } from \"@/lib/constants\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./ui/select\";\nimport { Camera, Upload, User as UserIcon, X, Fingerprint, CheckCircle, CalendarIcon, ArrowRight, ArrowLeft } from \"lucide-react\";\nimport Image from \"next/image\";\nimport { ScrollArea } from \"./ui/scroll-area\";\nimport { cn } from \"@/lib/utils\";\nimport { Popover, PopoverTrigger, PopoverContent } from \"./ui/popover\";\nimport { Calendar } from \"./ui/calendar\";\nimport { format } from \"date-fns\";\nimport { Textarea } from \"./ui/textarea\";\n\nconst formSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters.\"),\n  gender: z.enum(['Male', 'Female']),\n  dateOfBirth: z.date({ required_error: \"Date of birth is required.\" }),\n  maritalStatus: z.enum(['Single', 'Married', 'Divorced', 'Widowed']),\n  address: z.string().min(10, \"Address must be at least 10 characters.\"),\n  condition: z.enum(['Stable', 'Critical', 'Improving']),\n  assignedDoctor: z.string().min(1, \"Please assign a doctor.\"),\n  avatarUrl: z.string().optional(),\n  fingerprintId: z.string().optional(),\n});\n\ntype FormData = z.infer<typeof formSchema>;\ntype PatientSaveData = Omit<Patient, 'id' | 'medicalHistory' | 'prescriptions' | 'lastVisit' | 'labTests' | 'bloodType' | 'admission'>;\n\ninterface CreatePatientDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onPatientSaved: (patient: PatientSaveData) => void;\n}\n\nconst doctors = users.filter(u => u.role === 'doctor');\nconst step1Fields: (keyof FormData)[] = ['name', 'gender', 'dateOfBirth', 'maritalStatus', 'address', 'condition', 'assignedDoctor'];\n\nexport function CreatePatientDialog({ isOpen, onClose, onPatientSaved }: CreatePatientDialogProps) {\n    const [step, setStep] = useState(1);\n    const [photoPreview, setPhotoPreview] = useState<string | null>(null);\n    const [fingerprintCaptured, setFingerprintCaptured] = useState(false);\n    const [isCameraOpen, setCameraOpen] = useState(false);\n    const videoRef = useRef<HTMLVideoElement>(null);\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const fileInputRef = useRef<HTMLInputElement>(null);\n\n    const form = useForm<FormData>({\n        resolver: zodResolver(formSchema),\n        defaultValues: {\n            name: \"\",\n            gender: \"Male\",\n            maritalStatus: \"Single\",\n            address: \"\",\n            condition: \"Stable\",\n            assignedDoctor: \"\",\n            avatarUrl: \"\",\n            fingerprintId: \"\",\n        },\n    });\n    \n    useEffect(() => {\n        if (isOpen) {\n            setStep(1); // Reset to first step when dialog opens\n            form.reset({\n                name: \"\",\n                gender: \"Male\",\n                maritalStatus: \"Single\",\n                address: \"\",\n                condition: \"Stable\",\n                assignedDoctor: doctors.length > 0 ? doctors[0].name : \"\",\n                avatarUrl: \"\",\n                fingerprintId: \"\",\n            });\n            setPhotoPreview(null);\n            setFingerprintCaptured(false);\n            if (fileInputRef.current) fileInputRef.current.value = \"\";\n        }\n    }, [isOpen, form]);\n\n    useEffect(() => {\n        const startVideoStream = async () => {\n            if (isCameraOpen && navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n                try {\n                    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n                    if (videoRef.current) {\n                        videoRef.current.srcObject = stream;\n                    }\n                } catch (error) {\n                    console.error(\"Error accessing camera:\", error);\n                    setCameraOpen(false);\n                }\n            }\n        };\n\n        const stopVideoStream = () => {\n            if (videoRef.current && videoRef.current.srcObject) {\n                const stream = videoRef.current.srcObject as MediaStream;\n                stream.getTracks().forEach(track => track.stop());\n                videoRef.current.srcObject = null;\n            }\n        };\n\n        if (isCameraOpen) {\n            startVideoStream();\n        } else {\n            stopVideoStream();\n        }\n\n        return () => stopVideoStream();\n    }, [isCameraOpen]);\n    \n\n    const handleCapture = () => {\n        if (videoRef.current && canvasRef.current) {\n            const video = videoRef.current;\n            const canvas = canvasRef.current;\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n            const context = canvas.getContext('2d');\n            context?.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n            const dataUrl = canvas.toDataURL('image/png');\n            setPhotoPreview(dataUrl);\n            form.setValue('avatarUrl', dataUrl);\n            setCameraOpen(false);\n        }\n    }\n    \n    const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const file = event.target.files?.[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                const dataUrl = reader.result as string;\n                setPhotoPreview(dataUrl);\n                form.setValue('avatarUrl', dataUrl);\n            }\n            reader.readAsDataURL(file);\n        }\n    }\n\n    const handleFingerprintCapture = () => {\n        // Simulate fingerprint capture\n        setFingerprintCaptured(true);\n        form.setValue('fingerprintId', `FP_${Date.now()}`);\n    }\n    \n    const triggerFileUpload = () => {\n        fileInputRef.current?.click();\n    };\n\n    const clearPhoto = () => {\n        setPhotoPreview(null);\n        form.setValue('avatarUrl', undefined);\n        if (fileInputRef.current) {\n            fileInputRef.current.value = \"\";\n        }\n    }\n\n    const clearFingerprint = () => {\n        setFingerprintCaptured(false);\n        form.setValue('fingerprintId', undefined);\n    }\n\n    const handleNext = async () => {\n        const isValid = await form.trigger(step1Fields);\n        if (isValid) {\n            setStep(2);\n        }\n    }\n\n    function onSubmit(values: FormData) {\n        onPatientSaved({ ...values, dateOfBirth: format(values.dateOfBirth, \"yyyy-MM-dd\")});\n    }\n\n    return (\n        <>\n            <Dialog open={isOpen} onOpenChange={onClose}>\n                <DialogContent className=\"max-w-xl flex flex-col p-0\">\n                    <DialogHeader className=\"p-6 pb-4 border-b\">\n                        <DialogTitle>Create New Patient Record</DialogTitle>\n                        <DialogDescription>\n                           Step {step} of 2: {step === 1 ? 'Enter Patient Details' : 'Capture Biometrics'}\n                        </DialogDescription>\n                    </DialogHeader>\n                    <Form {...form}>\n                        <form onSubmit={form.handleSubmit(onSubmit)} className=\"flex-1 overflow-hidden flex flex-col\">\n                             <ScrollArea className=\"flex-1\">\n                                <div className=\"p-6\">\n                                    {step === 1 && (\n                                         <div className=\"space-y-6\">\n                                            <FormField\n                                                control={form.control}\n                                                name=\"name\"\n                                                render={({ field }) => (\n                                                    <FormItem>\n                                                        <FormLabel>Full Name</FormLabel>\n                                                        <FormControl><Input placeholder=\"Jane Smith\" {...field} /></FormControl>\n                                                        <FormMessage />\n                                                    </FormItem>\n                                                )}\n                                            />\n                                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                                                <FormField\n                                                    control={form.control}\n                                                    name=\"gender\"\n                                                    render={({ field }) => (\n                                                        <FormItem>\n                                                            <FormLabel>Gender</FormLabel>\n                                                            <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                                                <FormControl><SelectTrigger><SelectValue placeholder=\"Select gender\" /></SelectTrigger></FormControl>\n                                                                <SelectContent>\n                                                                    <SelectItem value=\"Male\">Male</SelectItem>\n                                                                    <SelectItem value=\"Female\">Female</SelectItem>\n                                                                </SelectContent>\n                                                            </Select>\n                                                            <FormMessage />\n                                                        </FormItem>\n                                                    )}\n                                                />\n                                                <FormField\n                                                    control={form.control}\n                                                    name=\"dateOfBirth\"\n                                                    render={({ field }) => (\n                                                        <FormItem className=\"flex flex-col\">\n                                                        <FormLabel>Date of Birth</FormLabel>\n                                                        <Popover>\n                                                            <PopoverTrigger asChild>\n                                                            <FormControl>\n                                                                <Button\n                                                                variant={\"outline\"}\n                                                                className={cn(\n                                                                    \"w-full justify-start text-left font-normal\",\n                                                                    !field.value && \"text-muted-foreground\"\n                                                                )}\n                                                                >\n                                                                <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                                                                {field.value ? (\n                                                                    format(field.value, \"PPP\")\n                                                                ) : (\n                                                                    <span>Pick a date</span>\n                                                                )}\n                                                                </Button>\n                                                            </FormControl>\n                                                            </PopoverTrigger>\n                                                            <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                                                            <Calendar\n                                                                mode=\"single\"\n                                                                captionLayout=\"dropdown-buttons\"\n                                                                fromYear={1920}\n                                                                toYear={new Date().getFullYear()}\n                                                                selected={field.value}\n                                                                onSelect={field.onChange}\n                                                                disabled={(date) => date > new Date() || date < new Date(\"1900-01-01\")}\n                                                                initialFocus\n                                                            />\n                                                            </PopoverContent>\n                                                        </Popover>\n                                                        <FormMessage />\n                                                        </FormItem>\n                                                    )}\n                                                    />\n                                                <FormField\n                                                    control={form.control}\n                                                    name=\"maritalStatus\"\n                                                    render={({ field }) => (\n                                                        <FormItem>\n                                                            <FormLabel>Marital Status</FormLabel>\n                                                            <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                                                <FormControl><SelectTrigger><SelectValue placeholder=\"Select status\" /></SelectTrigger></FormControl>\n                                                                <SelectContent>\n                                                                    <SelectItem value=\"Single\">Single</SelectItem>\n                                                                    <SelectItem value=\"Married\">Married</SelectItem>\n                                                                    <SelectItem value=\"Divorced\">Divorced</SelectItem>\n                                                                    <SelectItem value=\"Widowed\">Widowed</SelectItem>\n                                                                </SelectContent>\n                                                            </Select>\n                                                            <FormMessage />\n                                                        </FormItem>\n                                                    )}\n                                                />\n                                                <FormField\n                                                    control={form.control}\n                                                    name=\"assignedDoctor\"\n                                                    render={({ field }) => (\n                                                        <FormItem>\n                                                            <FormLabel>Assign Doctor</FormLabel>\n                                                            <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                                                <FormControl><SelectTrigger><SelectValue placeholder=\"Select a doctor\" /></SelectTrigger></FormControl>\n                                                                <SelectContent>\n                                                                    {doctors.map((doctor) => (<SelectItem key={doctor.email} value={doctor.name}>{doctor.name}</SelectItem>))}\n                                                                </SelectContent>\n                                                            </Select>\n                                                            <FormMessage />\n                                                        </FormItem>\n                                                    )}\n                                                />\n                                            </div>\n                                             <div className=\"space-y-6\">\n                                                <FormField\n                                                        control={form.control}\n                                                        name=\"address\"\n                                                        render={({ field }) => (\n                                                            <FormItem>\n                                                                <FormLabel>Address</FormLabel>\n                                                                <FormControl>\n                                                                    <Textarea placeholder=\"123 Main St, Anytown...\" {...field} />\n                                                                </FormControl>\n                                                                <FormMessage />\n                                                            </FormItem>\n                                                        )}\n                                                    />\n                                                <FormField\n                                                    control={form.control}\n                                                    name=\"condition\"\n                                                    render={({ field }) => (\n                                                        <FormItem>\n                                                            <FormLabel>Initial Condition</FormLabel>\n                                                             <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                                                <FormControl><SelectTrigger><SelectValue placeholder=\"Select initial condition\" /></SelectTrigger></FormControl>\n                                                                <SelectContent>\n                                                                    <SelectItem value=\"Stable\">Stable</SelectItem>\n                                                                    <SelectItem value=\"Improving\">Improving</SelectItem>\n                                                                    <SelectItem value=\"Critical\">Critical</SelectItem>\n                                                                </SelectContent>\n                                                            </Select>\n                                                            <FormMessage />\n                                                        </FormItem>\n                                                    )}\n                                                />\n                                            </div>\n                                        </div>\n                                    )}\n                                    {step === 2 && (\n                                         <div className=\"space-y-6\">\n                                            <div className=\"space-y-3 flex flex-col\">\n                                                <FormLabel>Patient Biometrics</FormLabel>\n                                                <div className=\"grid grid-cols-2 gap-4\">\n                                                    <div className=\"aspect-square w-full rounded-md border bg-muted flex items-center justify-center overflow-hidden relative group/photo\">\n                                                        {photoPreview ? (\n                                                            <>\n                                                                <Image src={photoPreview} alt=\"Patient preview\" layout=\"fill\" objectFit=\"cover\" />\n                                                                <div className=\"absolute inset-0 bg-black/40 flex items-center justify-center opacity-0 group-hover/photo:opacity-100 transition-opacity\">\n                                                                    <Button type=\"button\" size=\"icon\" variant=\"destructive\" onClick={clearPhoto}>\n                                                                        <X className=\"h-5 w-5\" />\n                                                                        <span className=\"sr-only\">Clear Photo</span>\n                                                                    </Button>\n                                                                </div>\n                                                            </>\n                                                        ) : (\n                                                            <div className=\"text-center text-muted-foreground p-2\">\n                                                                <UserIcon className=\"mx-auto h-10 w-10\" />\n                                                                <p className=\"text-xs mt-1\">Patient Photo</p>\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                    <div className={cn(\"aspect-square w-full rounded-md border bg-muted flex items-center justify-center overflow-hidden relative group/fingerprint transition-colors\", fingerprintCaptured && \"border-green-500 bg-green-500/10\")}>\n                                                        {fingerprintCaptured ? (\n                                                            <>\n                                                                <div className=\"text-center text-green-600 p-2\">\n                                                                    <CheckCircle className=\"mx-auto h-10 w-10\" />\n                                                                    <p className=\"text-xs mt-1 font-semibold\">Captured</p>\n                                                                </div>\n                                                                <div className=\"absolute inset-0 bg-black/40 flex items-center justify-center opacity-0 group-hover/fingerprint:opacity-100 transition-opacity\">\n                                                                    <Button type=\"button\" size=\"icon\" variant=\"destructive\" onClick={clearFingerprint}>\n                                                                        <X className=\"h-5 w-5\" />\n                                                                        <span className=\"sr-only\">Clear Fingerprint</span>\n                                                                    </Button>\n                                                                </div>\n                                                            </>\n                                                        ) : (\n                                                            <div className=\"text-center text-muted-foreground p-2\">\n                                                                <Fingerprint className=\"mx-auto h-10 w-10\" />\n                                                                <p className=\"text-xs mt-1\">Fingerprint</p>\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                </div>\n                                                <div className=\"flex gap-2\">\n                                                    <Button type=\"button\" variant=\"outline\" className=\"w-full\" onClick={() => setCameraOpen(true)}>\n                                                        <Camera className=\"mr-2 h-4 w-4\"/>Take Photo\n                                                    </Button>\n                                                    <Button type=\"button\" variant=\"outline\" className=\"w-full\" onClick={triggerFileUpload}>\n                                                        <Upload className=\"mr-2 h-4 w-4\"/>Upload\n                                                    </Button>\n                                                    <Button type=\"button\" variant=\"outline\" className=\"w-full\" onClick={handleFingerprintCapture} disabled={fingerprintCaptured}>\n                                                        <Fingerprint className=\"mr-2 h-4 w-4\"/>Scan Print\n                                                    </Button>\n                                                    <input type=\"file\" ref={fileInputRef} onChange={handleFileChange} className=\"hidden\" accept=\"image/png, image/jpeg, image/gif\" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                            </ScrollArea>\n                            <DialogFooter className=\"p-6 pt-4 border-t bg-background flex justify-between\">\n                                <Button type=\"button\" variant=\"ghost\" onClick={onClose}>Cancel</Button>\n                                <div className=\"flex gap-2\">\n                                    {step === 2 && (\n                                         <Button type=\"button\" variant=\"outline\" onClick={() => setStep(1)}>\n                                            <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                                            Back\n                                        </Button>\n                                    )}\n                                    {step === 1 ? (\n                                        <Button type=\"button\" onClick={handleNext}>\n                                            Next <ArrowRight className=\"ml-2 h-4 w-4\" />\n                                        </Button>\n                                    ) : (\n                                        <Button type=\"submit\">Create Patient</Button>\n                                    )}\n                                </div>\n                            </DialogFooter>\n                        </form>\n                    </Form>\n                </DialogContent>\n            </Dialog>\n\n            {/* Camera Modal */}\n            <Dialog open={isCameraOpen} onOpenChange={setCameraOpen}>\n                <DialogContent>\n                    <DialogHeader>\n                        <DialogTitle>Take Patient Photo</DialogTitle>\n                    </DialogHeader>\n                    <div className=\"aspect-video w-full rounded-md bg-muted flex items-center justify-center overflow-hidden mt-2 border\">\n                        <video ref={videoRef} className=\"w-full h-full object-cover\" autoPlay muted playsInline />\n                    </div>\n                    <canvas ref={canvasRef} className=\"hidden\" />\n                    <DialogFooter>\n                        <Button type=\"button\" variant=\"ghost\" onClick={() => setCameraOpen(false)}>Cancel</Button>\n                        <Button type=\"button\" onClick={handleCapture}>\n                            <Camera className=\"mr-2 h-4 w-4\" /> Capture and Save\n                        </Button>\n                    </DialogFooter>\n                </DialogContent>\n            </Dialog>\n        </>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2288, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/patients/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { detailedPatients as initialPatients, Patient } from \"@/lib/constants\";\nimport Link from \"next/link\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowRight } from \"lucide-react\";\nimport { CreatePatientDialog } from \"@/components/create-patient-dialog\";\nimport { useToast } from \"@/hooks/use-toast\";\n\n\nexport default function Page() {\n    const [patients, setPatients] = useState(initialPatients.filter(p => p.condition !== 'Deceased'));\n    const [isDialogOpen, setDialogOpen] = useState(false);\n    const { toast } = useToast();\n\n    const handlePatientSaved = (newPatient: Omit<Patient, 'id' | 'medicalHistory' | 'prescriptions' | 'lastVisit' | 'labTests' | 'bloodType' | 'admission'>) => {\n        // Generate a random 3-character alphanumeric suffix\n        const suffix = Math.random().toString(36).substring(2, 5).toUpperCase();\n\n        // Find the highest existing patient number to generate a new sequential one\n        let maxNumber = 0;\n        initialPatients.forEach(p => {\n            const numPart = parseInt(p.id.split('-')[1]);\n            if (numPart > maxNumber) {\n                maxNumber = numPart;\n            }\n        });\n        const newPatientNumber = maxNumber + 1;\n        const paddedNumber = String(newPatientNumber).padStart(6, '0');\n\n        const genderPrefix = newPatient.gender === 'Male' ? 'PM' : 'PF';\n        const newId = `${genderPrefix}-${paddedNumber}-${suffix}`;\n\n        const patientToAdd: Patient = {\n            ...newPatient,\n            id: newId,\n            lastVisit: new Date().toISOString().split('T')[0],\n            bloodType: 'O+',\n            admission: { isAdmitted: false, admissionDate: null, dischargeDate: null, roomNumber: null, bedNumber: null },\n            medicalHistory: [{\n                id: `visit-${Date.now()}`,\n                date: new Date().toISOString().split('T')[0],\n                event: \"Patient Registration\",\n                details: `Patient registered with ID ${newId} and assigned to ${newPatient.assignedDoctor}.`,\n                doctor: \"Admin\"\n            }],\n            prescriptions: [],\n            labTests: []\n        };\n        \n        initialPatients.unshift(patientToAdd);\n        setPatients(initialPatients.filter(p => p.condition !== 'Deceased'));\n\n        toast({\n            title: \"Patient Created\",\n            description: `${newPatient.name} has been successfully added with ID ${newId}.`\n        });\n        setDialogOpen(false);\n    };\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <div className=\"flex justify-between items-center\">\n                        <div>\n                            <CardTitle>All Patients</CardTitle>\n                            <CardDescription>A list of all active patients in the system.</CardDescription>\n                        </div>\n                        <Button onClick={() => setDialogOpen(true)}>Create Patient</Button>\n                    </div>\n                </CardHeader>\n                <CardContent>\n                    <Table>\n                        <TableHeader>\n                            <TableRow>\n                                <TableHead>Name</TableHead>\n                                <TableHead>Patient ID</TableHead>\n                                <TableHead>Condition</TableHead>\n                                <TableHead>Last Visit</TableHead>\n                                <TableHead><span className=\"sr-only\">Actions</span></TableHead>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                            {patients.map((patient) => (\n                                <TableRow key={patient.id}>\n                                    <TableCell className=\"font-medium flex items-center gap-3\">\n                                        <Avatar>\n                                            <AvatarImage src={patient.avatarUrl} alt={patient.name} data-ai-hint=\"person\" />\n                                            <AvatarFallback>{patient.name.charAt(0)}</AvatarFallback>\n                                        </Avatar>\n                                        {patient.name}\n                                    </TableCell>\n                                    <TableCell>{patient.id}</TableCell>\n                                    <TableCell>\n                                        <Badge variant={patient.condition === 'Critical' ? 'destructive' : 'secondary'}>{patient.condition}</Badge>\n                                    </TableCell>\n                                    <TableCell>{patient.lastVisit}</TableCell>\n                                    <TableCell className=\"text-right\">\n                                        <Button asChild variant=\"ghost\" size=\"icon\">\n                                            <Link href={`/admin/patients/${patient.id}`}>\n                                                <ArrowRight className=\"w-4 h-4\" />\n                                                <span className=\"sr-only\">View Patient</span>\n                                            </Link>\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </CardContent>\n            </Card>\n            <CreatePatientDialog\n                isOpen={isDialogOpen}\n                onClose={() => setDialogOpen(false)}\n                onPatientSaved={handlePatientSaved}\n            />\n        </>\n    )\n}\n\n    "],"names":[],"mappings":"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","debugId":null}}]
}